{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "StakingRewards",
      "outputs": [
        {
          "internalType": "contract MockStakingRewards",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addr1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addr2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExample",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRewardsClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSpoofRewardsClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testVestingClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract MockERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vesting",
      "outputs": [
        {
          "internalType": "contract Vesting",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "170:2204:13:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;170:2204:13;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000c35760003560e01c8063ba414fa6116200007a578063ba414fa61462000147578063e6ae9a3e1462000162578063e7423eb8146200016c578063eabe09ad1462000176578063fa7626d4146200018a578063fc0c546a146200019857600080fd5b80630a9254e414620000c85780633f5a4a2a14620000d457806344c63eec14620000de5780634ef1871f1462000115578063798b5c8a146200011f5780638de38f981462000133575b600080fd5b620000d2620001ac565b005b620000d262000630565b600054620000f8906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b620000d26200063e565b600254620000f8906001600160a01b031681565b600454620000f8906001600160a01b031681565b6200015162000d4e565b60405190151581526020016200010c565b620000d262000e79565b620000d2620011f5565b600354620000f8906001600160a01b031681565b600054620001519060ff1681565b600154620000f8906001600160a01b031681565b604051620001ba906200154c565b604051809103906000f080158015620001d7573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550620186a060405162000210906200155a565b908152602001604051809103906000f08015801562000233573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b03929092169190911781556040516001625e79b760e01b03198152600481019190915260008051602062003dbd8339815191529063ffa18649906024016020604051808303816000875af1158015620002a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002cc919062001576565b600380546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b031981526002600482015260008051602062003dbd8339815191529063ffa18649906024016020604051808303816000875af11580156200033d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000363919062001576565b600480546001600160a01b0319166001600160a01b0392831617905560015460005460405191831692620100009091041690620003a09062001568565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620003d4573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b03928316908117909155600054604051639c5bbc8960e01b8152600481019290925262010000900490911690639c5bbc8990602401600060405180830381600087803b1580156200043a57600080fd5b505af11580156200044f573d6000803e3d6000fd5b505060015460025460405163095ea7b360e01b81526001600160a01b039182166004820152655af3107a400060248201529116925063095ea7b391506044016020604051808303816000875af1158015620004ae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004d49190620015a8565b50600254600354604051630eacccaf60e41b81526001600160a01b0391821660048201526103e8602482015291169063eacccaf090604401600060405180830381600087803b1580156200052757600080fd5b505af11580156200053c573d6000803e3d6000fd5b50506002546040516001625e79b760e01b031981526004808201526001600160a01b03909116925063eacccaf0915060008051602062003dbd8339815191529063ffa18649906024016020604051808303816000875af1158015620005a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005cb919062001576565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526103e86024820152604401600060405180830381600087803b1580156200061557600080fd5b505af11580156200062a573d6000803e3d6000fd5b50505050565b6200063c6001620013c8565b565b6040516001625e79b760e01b0319815260048082015260008051602062003dbd8339815191529063ca669fa790829063ffa18649906024016020604051808303816000875af115801562000696573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006bc919062001576565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b158015620006fe57600080fd5b505af115801562000713573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200076857600080fd5b505af11580156200077d573d6000803e3d6000fd5b5050600080546040516001625e79b760e01b031981526004808201529193506201000090046001600160a01b0316915063cba9614a9060008051602062003dbd8339815191529063ffa18649906024016020604051808303816000875af1158015620007ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000813919062001576565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562000858573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200087e9190620015cc565b905060008051602062003ddd83398151915281604051620008a191815260200190565b60405180910390a160008111620008bc57620008bc620015e6565b60008051602062003dbd83398151915263e5d6bf02620008e042621baf8062001612565b6040518263ffffffff1660e01b8152600401620008ff91815260200190565b600060405180830381600087803b1580156200091a57600080fd5b505af11580156200092f573d6000803e3d6000fd5b5050600080549092506201000090046001600160a01b0316905063310934ca6200095b6001856200162d565b6040518263ffffffff1660e01b81526004016200097a91815260200190565b602060405180830381865afa15801562000998573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009be9190620015cc565b905060008051602062003ddd83398151915281604051620009e191815260200190565b60405180910390a16001546040516001625e79b760e01b031981526004808201526001600160a01b03909116906370a082319060008051602062003dbd8339815191529063ffa18649906024016020604051808303816000875af115801562000a4e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a74919062001576565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562000ab9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000adf9190620015cc565b1562000aef5762000aef620015e6565b6040516001625e79b760e01b0319815260048082015260008051602062003dbd8339815191529063ca669fa790829063ffa18649906024016020604051808303816000875af115801562000b47573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b6d919062001576565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801562000baf57600080fd5b505af115801562000bc4573d6000803e3d6000fd5b50506000546201000090046001600160a01b0316915063379607f5905062000bee6001856200162d565b6040518263ffffffff1660e01b815260040162000c0d91815260200190565b600060405180830381600087803b15801562000c2857600080fd5b505af115801562000c3d573d6000803e3d6000fd5b50506001546040516001625e79b760e01b03198152600480820152600093506001600160a01b0390911691506370a082319060008051602062003dbd8339815191529063ffa18649906024016020604051808303816000875af115801562000ca9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ccf919062001576565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562000d14573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d3a9190620015cc565b1162000d4a5762000d4a620015e6565b5050565b60008054610100900460ff161562000d6f5750600054610100900460ff1690565b600060008051602062003dbd8339815191523b1562000e74576040805160008051602062003dbd833981519152602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000df6917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001685565b60408051601f198184030181529082905262000e1291620016ab565b6000604051808303816000865af19150503d806000811462000e51576040519150601f19603f3d011682016040523d82523d6000602084013e62000e56565b606091505b509150508080602001905181019062000e709190620015a8565b9150505b919050565b60035460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062003dbd8339815191529063ca669fa790602401600060405180830381600087803b15801562000ece57600080fd5b505af115801562000ee3573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000f3857600080fd5b505af115801562000f4d573d6000803e3d6000fd5b50506001546000546040516370a0823160e01b81526001600160a01b03620100009092048216600482015260008051602062003ddd8339815191529450911691506370a0823190602401602060405180830381865afa15801562000fb5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fdb9190620015cc565b60405190815260200160405180910390a1600080546003546040516365d4b0a560e11b81526001600160a01b03918216600482015262010000909204169063cba9614a90602401602060405180830381865afa15801562001040573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010669190620015cc565b9050600081116200107b576200107b620015e6565b60405181815260008051602062003ddd8339815191529060200160405180910390a1600080546201000090046001600160a01b031663310934ca620010c26001856200162d565b6040518263ffffffff1660e01b8152600401620010e191815260200190565b602060405180830381865afa158015620010ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011259190620015cc565b905060008051602062003ddd833981519152816040516200114891815260200190565b60405180910390a16003546040516001600160a01b0390911681527f7ae74c527414ae135fd97047b12921a5ec3911b804197855d67e25c7b75ee6f39060200160405180910390a1604080516390c5013b60e01b8152905160008051602062003dbd833981519152916390c5013b91600480830192600092919082900301818387803b158015620011d857600080fd5b505af1158015620011ed573d6000803e3d6000fd5b505050505050565b6004805460405163ca669fa760e01b81526001600160a01b039091169181019190915260008051602062003dbd8339815191529063ca669fa790602401600060405180830381600087803b1580156200124d57600080fd5b505af115801562001262573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620012b757600080fd5b505af1158015620012cc573d6000803e3d6000fd5b505060008054600480546040516365d4b0a560e11b81526001600160a01b039182169281019290925292945062010000909104909116915063cba9614a90602401602060405180830381865afa1580156200132b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013519190620015cc565b90508015620013645762001364620015e6565b604080516390c5013b60e01b8152905160008051602062003dbd833981519152916390c5013b91600480830192600092919082900301818387803b158015620013ac57600080fd5b505af1158015620013c1573d6000803e3d6000fd5b5050505050565b8062001440577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200142e9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200144062001443565b50565b60008051602062003dbd8339815191523b156200153b576040805160008051602062003dbd833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620014d6929160200162001685565b60408051601f1981840301815290829052620014f291620016ab565b6000604051808303816000865af19150503d806000811462001531576040519150601f19603f3d011682016040523d82523d6000602084013e62001536565b606091505b505050505b6000805461ff001916610100179055565b61143e80620016ba83390190565b610b348062002af883390190565b610791806200362c83390190565b6000602082840312156200158957600080fd5b81516001600160a01b0381168114620015a157600080fd5b9392505050565b600060208284031215620015bb57600080fd5b81518015158114620015a157600080fd5b600060208284031215620015df57600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115620016285762001628620015fc565b500190565b600082821015620016425762001642620015fc565b500390565b6000815160005b818110156200166a57602081850181015186830152016200164e565b818111156200167a576000828601525b509290920192915050565b6001600160e01b0319831681526000620016a3600483018462001647565b949350505050565b6000620015a182846200164756fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6113c08061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638da5cb5b11610097578063cbf9fe5f11610066578063cbf9fe5f14610333578063df681c1414610353578063f2fde38b14610373578063ffb4b1be1461038657600080fd5b80638da5cb5b146102c95780639c4e64e0146102e45780639c5bbc89146102f7578063cba9614a1461030a57600080fd5b8063379607f5116100d3578063379607f5146101dc578063673448dd146101ef578063715018a614610222578063854e96821461022a57600080fd5b8062f714ce146101045780630d53588314610119578063297611361461012c578063310934ca1461013f575b600080fd5b610117610112366004611059565b610399565b005b610117610127366004611093565b610587565b61011761013a366004611149565b6108a2565b6101c961014d3660046111fa565b33600090815260016020818152604080842094845293815291839020835160e08101855281548082529282015493810193909352600281015493830193909352600383015460608301526004830154608083015260059092015460ff8116151560a083015261010090046001600160a01b031660c09091015290565b6040519081526020015b60405180910390f35b6101176101ea3660046111fa565b610993565b6102126101fd366004611213565b60036020526000908152604090205460ff1681565b60405190151581526020016101d3565b610117610c18565b610289610238366004611235565b600160208181526000938452604080852090915291835291208054918101546002820154600383015460048401546005909401549293919290919060ff81169061010090046001600160a01b031687565b6040805197885260208801969096529486019390935260608501919091526080840152151560a08301526001600160a01b031660c082015260e0016101d3565b6000546040516001600160a01b0390911681526020016101d3565b6101c96102f236600461125f565b610c4e565b610117610305366004611213565b610c93565b6101c9610318366004611213565b6001600160a01b031660009081526002602052604090205490565b6101c9610341366004611213565b60046020526000908152604090205481565b6101c9610361366004611213565b60026020526000908152604090205481565b610117610381366004611213565b610ce1565b610117610394366004611235565b610d7c565b6000546001600160a01b031633146103cc5760405162461bcd60e51b81526004016103c390611291565b60405180910390fd5b6001600160a01b0381166000818152600460208190526040918290205491516370a0823160e01b8152309181019190915283928592916370a0823190602401602060405180830381865afa158015610428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044c91906112c6565b61045691906112f5565b10156104a45760405162461bcd60e51b815260206004820152601760248201527f56657374696e673a2043616e277420776974686472617700000000000000000060448201526064016103c3565b806001600160a01b031663a9059cbb6104c56000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018690526044016020604051808303816000875af1158015610512573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610536919061130c565b6105825760405162461bcd60e51b815260206004820152601860248201527f56657374696e673a207769746864726177206661696c6564000000000000000060448201526064016103c3565b505050565b6000546001600160a01b03163314806105af57503360009081526003602052604090205460ff165b6105cb5760405162461bcd60e51b81526004016103c390611291565b6000821180156105db5750828210155b80156105e75750600086115b6106335760405162461bcd60e51b815260206004820152601f60248201527f56657374696e673a20696e76616c69642076657374696e6720706172616d730060448201526064016103c3565b6001600160a01b0385166000908152600460205260409020546106568782611329565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa15801561069a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106be91906112c6565b101561070c5760405162461bcd60e51b815260206004820152601a60248201527f56657374696e673a204e6f7420656e6f75676820746f6b656e7300000000000060448201526064016103c3565b6001600160a01b038816600090815260026020908152604080832054815160e0810183528b8152928301939093528101849052606081016107508762093a80611341565b61075a9086611329565b815260200161076c8662093a80611341565b6107769086611329565b81528715156020808301919091526001600160a01b03808b166040938401528c811660009081526001808452848220878352845290849020855181559285015183820155928401516002830155606084015160038301556080840151600483015560a08401516005909201805460c09095015190911661010002610100600160a81b0319921515929092166001600160a81b03199094169390931717909155610820908290611329565b6001600160a01b038a166000908152600260205260409020556108438883611329565b6001600160a01b0380891660009081526004602090815260409182902093909355518a8152908b16917fd4a50953e9ae2104f507446be8391c79b33e1e86e626473e34bb79eb5fea1f3e910160405180910390a2505050505050505050565b6000546001600160a01b031633146108cc5760405162461bcd60e51b81526004016103c390611291565b8786811461091c5760405162461bcd60e51b815260206004820152601d60248201527f56657374696e673a204172726179206c656e677468732064696666657200000060448201526064016103c3565b60005b81811015610986576109748b8b8381811061093c5761093c611360565b90506020020160208101906109519190611213565b8a8a8481811061096357610963611360565b905060200201358989898989610587565b8061097e81611376565b91505061091f565b5050505050505050505050565b3360008181526001602090815260408083208584528252918290208054835194855291840191909152917f33ac953613b6ef91c4afa2b6adb073486ec4b038cbc7fb7be7ff98f5f261e77e910160405180910390a14281600301541115610a3c5760405162461bcd60e51b815260206004820152601a60248201527f56657374696e673a20636c696666206e6f74207265616368656400000000000060448201526064016103c3565b8054610a835760405162461bcd60e51b815260206004820152601660248201527556657374696e673a206e6f7420636c61696d61626c6560501b60448201526064016103c3565b6000610a9d82600001544284600201548560040154610c4e565b82549091508111610aae5780610ab1565b81545b90506000826001015482610ac591906112f5565b60018401839055600584015461010090046001600160a01b0316600090815260046020526040902054909150610afc9082906112f5565b6005840180546001600160a01b03610100918290048116600090815260046020819052604091829020959095559254925163a9059cbb60e01b81523394810194909452602484018590529104169063a9059cbb906044016020604051808303816000875af1158015610b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b96919061130c565b610bdd5760405162461bcd60e51b815260206004820152601860248201527715995cdd1a5b99ce881d1c985b9cd9995c8819985a5b195960421b60448201526064016103c3565b60405182815233907f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d49060200160405180910390a250505050565b6000546001600160a01b03163314610c425760405162461bcd60e51b81526004016103c390611291565b610c4c6000610fed565b565b600082841015610c6057506000610c8b565b610c6a83836112f5565b610c7484866112f5565b610c7e9087611341565b610c889190611391565b90505b949350505050565b6000546001600160a01b03163314610cbd5760405162461bcd60e51b81526004016103c390611291565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b6000546001600160a01b03163314610d0b5760405162461bcd60e51b81526004016103c390611291565b6001600160a01b038116610d705760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c3565b610d7981610fed565b50565b6000546001600160a01b03163314610da65760405162461bcd60e51b81526004016103c390611291565b6001600160a01b03821660009081526001602090815260408083208484529091529020600581015460ff1615610e1e5760405162461bcd60e51b815260206004820152601960248201527f56657374696e673a204163636f756e742069732066697865640000000000000060448201526064016103c3565b60018101548154600091610e31916112f5565b905080610e805760405162461bcd60e51b815260206004820152601e60248201527f56657374696e673a206e6f206f75747374616e64696e6720746f6b656e73000060448201526064016103c3565b6000808355600583015461010090046001600160a01b0316815260046020526040902054610eaf9082906112f5565b6005830180546001600160a01b036101009182900481166000908152600460205260409020939093559054041663a9059cbb610ef36000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610f40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f64919061130c565b610fab5760405162461bcd60e51b815260206004820152601860248201527715995cdd1a5b99ce881d1c985b9cd9995c8819985a5b195960421b60448201526064016103c3565b6040516001600160a01b03851681527f398bd6b21ae4164ec322fb0eb8c2eb6277f36fd41903fbbed594dfe1255912819060200160405180910390a150505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461105457600080fd5b919050565b6000806040838503121561106c57600080fd5b8235915061107c6020840161103d565b90509250929050565b8015158114610d7957600080fd5b600080600080600080600060e0888a0312156110ae57600080fd5b6110b78861103d565b9650602088013595506110cc6040890161103d565b945060608801356110dc81611085565b9699959850939660808101359560a0820135955060c0909101359350915050565b60008083601f84011261110f57600080fd5b50813567ffffffffffffffff81111561112757600080fd5b6020830191508360208260051b850101111561114257600080fd5b9250929050565b600080600080600080600080600060e08a8c03121561116757600080fd5b893567ffffffffffffffff8082111561117f57600080fd5b61118b8d838e016110fd565b909b50995060208c01359150808211156111a457600080fd5b506111b18c828d016110fd565b90985096506111c4905060408b0161103d565b945060608a01356111d481611085565b8094505060808a0135925060a08a0135915060c08a013590509295985092959850929598565b60006020828403121561120c57600080fd5b5035919050565b60006020828403121561122557600080fd5b61122e8261103d565b9392505050565b6000806040838503121561124857600080fd5b6112518361103d565b946020939093013593505050565b6000806000806080858703121561127557600080fd5b5050823594602084013594506040840135936060013592509050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156112d857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611307576113076112df565b500390565b60006020828403121561131e57600080fd5b815161122e81611085565b6000821982111561133c5761133c6112df565b500190565b600081600019048311821515161561135b5761135b6112df565b500290565b634e487b7160e01b600052603260045260246000fd5b600060001982141561138a5761138a6112df565b5060010190565b6000826113ae57634e487b7160e01b600052601260045260246000fd5b50049056fea164736f6c634300080b000a60806040523480156200001157600080fd5b5060405162000b3438038062000b34833981016040819052620000349162000248565b604051806040016040528060078152602001662ca5a9b1b7b4b760c91b81525060405180604001604052806003815260200162594b5360e81b815250816003908051906020019062000088929190620001a2565b5080516200009e906004906020840190620001a2565b505050620000b33382620000ba60201b60201c565b50620002c6565b6001600160a01b038216620001155760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000129919062000262565b90915550506001600160a01b038216600090815260208190526040812080548392906200015890849062000262565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001b09062000289565b90600052602060002090601f016020900481019282620001d457600085556200021f565b82601f10620001ef57805160ff19168380011785556200021f565b828001600101855582156200021f579182015b828111156200021f57825182559160200191906001019062000202565b506200022d92915062000231565b5090565b5b808211156200022d576000815560010162000232565b6000602082840312156200025b57600080fd5b5051919050565b600082198211156200028457634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200029e57607f821691505b60208210811415620002c057634e487b7160e01b600052602260045260246000fd5b50919050565b61085e80620002d66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea164736f6c634300080b000a608060405234801561001057600080fd5b5060405161079138038061079183398101604081905261002f91610081565b6001600081905580546001600160a01b039384166001600160a01b031991821617909155600380549290931691161790556100b4565b80516001600160a01b038116811461007c57600080fd5b919050565b6000806040838503121561009457600080fd5b61009d83610065565b91506100ab60208401610065565b90509250929050565b6106ce806100c36000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630700037d146100675780633d18b9121461009a57806344c63eec146100a4578063d1af0c7d146100cf578063e4d75c9d146100e2578063eacccaf014610112575b600080fd5b6100876100753660046105df565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100a2610125565b005b6003546100b7906001600160a01b031681565b6040516001600160a01b039091168152602001610091565b6001546100b7906001600160a01b031681565b6100a26100f03660046105df565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6100a26101203660046105fa565b610294565b6002600054141561017d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260008181553381526020919091526040902054801561028c57336000908152600260205260408120556003546001546101c5916001600160a01b039182169116836102c8565b6003805460018054604051630d53588360e01b815233600480830191909152602482018790526001600160a01b0392831660448301526064820193909352608481019490945260a48401919091524260c48401521690630d5358839060e401600060405180830381600087803b15801561023e57600080fd5b505af1158015610252573d6000803e3d6000fd5b50506040518381523392507fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486915060200160405180910390a25b506001600055565b6001546102ac906001600160a01b0316333084610330565b6001600160a01b03909116600090815260026020526040902055565b6040516001600160a01b03831660248201526044810182905261032b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261036e565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526103689085906323b872dd60e01b906084016102f4565b50505050565b60006103c3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104409092919063ffffffff16565b80519091501561032b57808060200190518101906103e19190610624565b61032b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610174565b606061044f8484600085610459565b90505b9392505050565b6060824710156104ba5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610174565b6001600160a01b0385163b6105115760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610174565b600080866001600160a01b0316858760405161052d9190610672565b60006040518083038185875af1925050503d806000811461056a576040519150601f19603f3d011682016040523d82523d6000602084013e61056f565b606091505b509150915061057f82828661058a565b979650505050505050565b60608315610599575081610452565b8251156105a95782518084602001fd5b8160405162461bcd60e51b8152600401610174919061068e565b80356001600160a01b03811681146105da57600080fd5b919050565b6000602082840312156105f157600080fd5b610452826105c3565b6000806040838503121561060d57600080fd5b610616836105c3565b946020939093013593505050565b60006020828403121561063657600080fd5b8151801515811461045257600080fd5b60005b83811015610661578181015183820152602001610649565b838111156103685750506000910152565b60008251610684818460208701610646565b9190910192915050565b60208152600082518060208401526106ad816040850160208701610646565b601f01601f1916919091016040019291505056fea164736f6c634300080b000a0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d2cab9790510fd8bdfbd2115288db33fec66691d476efc5427cfd4c0969301755a164736f6c634300080b000a",
    "sourceMap": "170:2204:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;429:551;;;:::i;:::-;;986:63;;;:::i;214:22::-;;;;;;;;-1:-1:-1;;;;;214:22:13;;;;;;-1:-1:-1;;;;;194:32:15;;;176:51;;164:2;149:18;214:22:13;;;;;;;;1819:553;;;:::i;270:40::-;;;;;-1:-1:-1;;;;;270:40:13;;;342:20;;;;;-1:-1:-1;;;;;342:20:13;;;1819:584:0;;;:::i;:::-;;;846:14:15;;839:22;821:41;;809:2;794:18;1819:584:0;681:187:15;1327:486:13;;;:::i;1055:265::-;;;:::i;316:20::-;;;;;-1:-1:-1;;;;;316:20:13;;;1572:26:0;;;;;;;;;242:22:13;;;;;-1:-1:-1;;;;;242:22:13;;;429:551;473:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;463:7;;:23;;;;;-1:-1:-1;;;;;463:23:13;;;;;-1:-1:-1;;;;;463:23:13;;;;;;518:6;504:21;;;;;:::i;:::-;1258:25:15;;;1246:2;1231:18;504:21:13;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;496:5:13;:29;;-1:-1:-1;;;;;;496:29:13;-1:-1:-1;;;;;496:29:13;;;;;;;;;;543:14;;-1:-1:-1;;;;;;543:14:13;;;;;1258:25:15;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;543:11:13;;1231:18:15;;543:14:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;535:5;:22;;-1:-1:-1;;;;;;535:22:13;-1:-1:-1;;;;;535:22:13;;;;;;;;;;575:14;;-1:-1:-1;;;;;;575:14:13;;587:1;575:14;;;1258:25:15;-1:-1:-1;;;;;;;;;;;1671:64:0;575:11:13;;1231:18:15;;575:14:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;567:5;:22;;-1:-1:-1;;;;;;567:22:13;-1:-1:-1;;;;;567:22:13;;;;;;-1:-1:-1;647:5:13;-1:-1:-1;662:7:13;616:55;;647:5;;;;662:7;;;;;;616:55;;;:::i;:::-;-1:-1:-1;;;;;2199:15:15;;;2181:34;;2251:15;;2246:2;2231:18;;2224:43;2131:2;2116:18;616:55:13;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;599:14:13;:72;;-1:-1:-1;;;;;;599:72:13;-1:-1:-1;;;;;599:72:13;;;;;;;;;-1:-1:-1;737:7:13;:51;;-1:-1:-1;;;737:51:13;;;;;176::15;;;;737:7:13;;;;;;;:26;;149:18:15;;737:51:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;798:5:13;;820:14;;798:54;;-1:-1:-1;;;798:54:13;;-1:-1:-1;;;;;820:14:13;;;798:54;;;2474:51:15;836:15:13;2541:18:15;;;2534:34;798:5:13;;;-1:-1:-1;798:13:13;;-1:-1:-1;2447:18:15;;798:54:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;862:14:13;;895:5;;862:46;;-1:-1:-1;;;862:46:13;;-1:-1:-1;;;;;895:5:13;;;862:46;;;2474:51:15;903:4:13;2541:18:15;;;2534:34;862:14:13;;;:24;;2447:18:15;;862:46:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;918:14:13;;943;;-1:-1:-1;;;;;;943:14:13;;955:1;943:14;;;1258:25:15;-1:-1:-1;;;;;918:14:13;;;;-1:-1:-1;918:24:13;;-1:-1:-1;;;;;;;;;;;;1671:64:0;943:11:13;;1231:18:15;;943:14:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;918:46;;-1:-1:-1;;;;;;918:46:13;;;;;;;-1:-1:-1;;;;;2492:32:15;;;918:46:13;;;2474:51:15;959:4:13;2541:18:15;;;2534:34;2447:18;;918:46:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;429:551::o;986:63::-;1026:16;1037:4;1026:10;:16::i;:::-;986:63::o;1819:553::-;1876:14;;-1:-1:-1;;;;;;1876:14:13;;1888:1;1876:14;;;1258:25:15;-1:-1:-1;;;;;;;;;;;1671:64:0;1863:12:13;;1671:64:0;;1876:11:13;;1231:18:15;;1876:14:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1863:28;;-1:-1:-1;;;;;;1863:28:13;;;;;;;-1:-1:-1;;;;;194:32:15;;;1863:28:13;;;176:51:15;149:18;;1863:28:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1901:14;;;;;;;;;-1:-1:-1;;;;;1901:14:13;-1:-1:-1;;;;;1901:24:13;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1937:9:13;1949:7;;1975:14;;-1:-1:-1;;;;;;1975:14:13;;1987:1;1975:14;;;1258:25:15;1937:9:13;;-1:-1:-1;1949:7:13;;;-1:-1:-1;;;;;1949:7:13;;-1:-1:-1;1949:25:13;;-1:-1:-1;;;;;;;;;;;1671:64:0;1975:11:13;;1231:18:15;;1975:14:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1949:41;;-1:-1:-1;;;;;;1949:41:13;;;;;;;-1:-1:-1;;;;;194:32:15;;;1949:41:13;;;176:51:15;149:18;;1949:41:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1937:53;;-1:-1:-1;;;;;;;;;;;2014:1:13;2005:11;;;;1258:25:15;;1246:2;1231:18;;1099:190;2005:11:13;;;;;;;;2037:1;2033;:5;2026:13;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;2049:11:13;2061:25;:15;2079:7;2061:25;:::i;:::-;2049:38;;;;;;;;;;;;;1258:25:15;;1246:2;1231:18;;1099:190;2049:38:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2097:9:13;2109:7;;2097:9;;-1:-1:-1;2109:7:13;;;-1:-1:-1;;;;;2109:7:13;;-1:-1:-1;2109:30:13;2140:3;2142:1;2140;:3;:::i;:::-;2109:35;;;;;;;;;;;;;1258:25:15;;1246:2;1231:18;;1099:190;2109:35:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2097:47;;-1:-1:-1;;;;;;;;;;;2168:1:13;2159:11;;;;1258:25:15;;1246:2;1231:18;;1099:190;2159:11:13;;;;;;;;2212:5;;2228:14;;-1:-1:-1;;;;;;2228:14:13;;2240:1;2228:14;;;1258:25:15;-1:-1:-1;;;;;2212:5:13;;;;:15;;-1:-1:-1;;;;;;;;;;;1671:64:0;2228:11:13;;1231:18:15;;2228:14:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2212:31;;-1:-1:-1;;;;;;2212:31:13;;;;;;;-1:-1:-1;;;;;194:32:15;;;2212:31:13;;;176:51:15;149:18;;2212:31:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;2205:42;;;;:::i;:::-;2270:14;;-1:-1:-1;;;;;;2270:14:13;;2282:1;2270:14;;;1258:25:15;-1:-1:-1;;;;;;;;;;;1671:64:0;2257:12:13;;1671:64:0;;2270:11:13;;1231:18:15;;2270:14:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2257:28;;-1:-1:-1;;;;;;2257:28:13;;;;;;;-1:-1:-1;;;;;194:32:15;;;2257:28:13;;;176:51:15;149:18;;2257:28:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2295:7:13;;;;;-1:-1:-1;;;;;2295:7:13;;-1:-1:-1;2295:13:13;;-1:-1:-1;2309:3:13;2311:1;2309;:3;:::i;:::-;2295:18;;;;;;;;;;;;;1258:25:15;;1246:2;1231:18;;1099:190;2295:18:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2330:5:13;;2346:14;;-1:-1:-1;;;;;;2346:14:13;;2358:1;2346:14;;;1258:25:15;2362:1:13;;-1:-1:-1;;;;;;2330:5:13;;;;-1:-1:-1;2330:15:13;;-1:-1:-1;;;;;;;;;;;1671:64:0;2346:11:13;;1231:18:15;;2346:14:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2330:31;;-1:-1:-1;;;;;;2330:31:13;;;;;;;-1:-1:-1;;;;;194:32:15;;;2330:31:13;;;176:51:15;149:18;;2330:31:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;2323:41;;;;:::i;:::-;1852:520;;1819:553::o;:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:0;;;2474:51:15;;;-1:-1:-1;;;2541:18:15;;;2534:34;2196:43:0;;;;;;;;;2447:18:15;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1327:486:13:-;1431:5;;1418:19;;-1:-1:-1;;;1418:19:13;;-1:-1:-1;;;;;1431:5:13;;;1418:19;;;176:51:15;-1:-1:-1;;;;;;;;;;;1671:64:0;1418:12:13;;149:18:15;;1418:19:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:14;;;;;;;;;-1:-1:-1;;;;;1447:14:13;-1:-1:-1;;;;;1447:24:13;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1497:5:13;;;1521:7;1497:33;;-1:-1:-1;;;1497:33:13;;-1:-1:-1;;;;;1521:7:13;;;;;;1497:33;;;176:51:15;-1:-1:-1;;;;;;;;;;;1488:43:13;-1:-1:-1;1497:5:13;;;-1:-1:-1;1497:15:13;;149:18:15;;1497:33:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1488:43;;1258:25:15;;;1246:2;1231:18;1488:43:13;;;;;;;1541:9;1553:7;;1579:5;;1553:32;;-1:-1:-1;;;1553:32:13;;-1:-1:-1;;;;;1579:5:13;;;1553:32;;;176:51:15;1553:7:13;;;;;;:25;;149:18:15;;1553:32:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1541:44;;1606:1;1602;:5;1595:13;;;;:::i;:::-;1623:11;;1258:25:15;;;-1:-1:-1;;;;;;;;;;;1623:11:13;1246:2:15;1231:18;1623:11:13;;;;;;;1644:9;1656:7;;;;;-1:-1:-1;;;;;1656:7:13;:30;1687:3;1689:1;1687;:3;:::i;:::-;1656:35;;;;;;;;;;;;;1258:25:15;;1246:2;1231:18;;1099:190;1656:35:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1644:47;;-1:-1:-1;;;;;;;;;;;1715:1:13;1706:11;;;;1258:25:15;;1246:2;1231:18;;1099:190;1706:11:13;;;;;;;;1744:5;;1732:18;;-1:-1:-1;;;;;1744:5:13;;;176:51:15;;1732:18:13;;164:2:15;149:18;1732::13;;;;;;;1788;;;-1:-1:-1;;;1788:18:13;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;1788:16:13;;:18;;;;;1695:37:0;;1788:18:13;;;;;;;1695:37:0;1671:64;1788:18:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:453;;1327:486::o;1055:265::-;1164:5;;;1151:19;;-1:-1:-1;;;1151:19:13;;-1:-1:-1;;;;;1164:5:13;;;1151:19;;;176:51:15;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;1151:12:13;;149:18:15;;1151:19:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1180:14;;;;;;;;;-1:-1:-1;;;;;1180:14:13;-1:-1:-1;;;;;1180:24:13;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1217:9:13;1229:7;;1255:5;;;1229:32;;-1:-1:-1;;;1229:32:13;;-1:-1:-1;;;;;1255:5:13;;;1229:32;;;176:51:15;;;;1217:9:13;;-1:-1:-1;1229:7:13;;;;;;;;-1:-1:-1;1229:25:13;;149:18:15;;1229:32:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1217:44;-1:-1:-1;1278:6:13;;1271:14;;;;:::i;:::-;1295:18;;;-1:-1:-1;;;1295:18:13;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;1295:16:13;;:18;;;;;1695:37:0;;1295:18:13;;;;;;;1695:37:0;1671:64;1295:18:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1093:227;1055:265::o;3255:157:0:-;3315:9;3310:96;;3345:30;;;;;5538:2:15;5520:21;;;5577:2;5557:18;;;5550:30;5616:25;5611:2;5596:18;;5589:53;5674:2;5659:18;;5336:347;3345:30:0;;;;;;;;3389:6;:4;:6::i;:::-;3255:157;:::o;2410:424::-;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;2445:359;;2645:67;;;-1:-1:-1;;;;;;;;;;;2645:67:0;;;5890:51:15;;;-1:-1:-1;;;5957:18:15;;;5950:34;;;;2705:4:0;6000:18:15;;;5993:34;2482:11:0;;1671:64;2579:43;;5863:18:15;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;1484:290:15:-;1554:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:52;;;1623:1;1620;1613:12;1575:52;1649:16;;-1:-1:-1;;;;;1694:31:15;;1684:42;;1674:70;;1740:1;1737;1730:12;1674:70;1763:5;1484:290;-1:-1:-1;;;1484:290:15:o;2579:277::-;2646:6;2699:2;2687:9;2678:7;2674:23;2670:32;2667:52;;;2715:1;2712;2705:12;2667:52;2747:9;2741:16;2800:5;2793:13;2786:21;2779:5;2776:32;2766:60;;2822:1;2819;2812:12;3341:184;3411:6;3464:2;3452:9;3443:7;3439:23;3435:32;3432:52;;;3480:1;3477;3470:12;3432:52;-1:-1:-1;3503:16:15;;3341:184;-1:-1:-1;3341:184:15:o;3712:127::-;3773:10;3768:3;3764:20;3761:1;3754:31;3804:4;3801:1;3794:15;3828:4;3825:1;3818:15;3844:127;3905:10;3900:3;3896:20;3893:1;3886:31;3936:4;3933:1;3926:15;3960:4;3957:1;3950:15;3976:128;4016:3;4047:1;4043:6;4040:1;4037:13;4034:39;;;4053:18;;:::i;:::-;-1:-1:-1;4089:9:15;;3976:128::o;4109:125::-;4149:4;4177:1;4174;4171:8;4168:34;;;4182:18;;:::i;:::-;-1:-1:-1;4219:9:15;;4109:125::o;4518:336::-;4559:3;4597:5;4591:12;4621:1;4631:128;4645:6;4642:1;4639:13;4631:128;;;4742:4;4727:13;;;4723:24;;4717:31;4704:11;;;4697:52;4660:12;4631:128;;;4777:6;4774:1;4771:13;4768:48;;;4812:1;4803:6;4798:3;4794:16;4787:27;4768:48;-1:-1:-1;4832:16:15;;;;;4518:336;-1:-1:-1;;4518:336:15:o;4859:278::-;-1:-1:-1;;;;;;5044:33:15;;5032:46;;5014:3;5094:37;5128:1;5119:11;;5111:6;5094:37;:::i;:::-;5087:44;4859:278;-1:-1:-1;;;;4859:278:15:o;5142:189::-;5271:3;5296:29;5321:3;5313:6;5296:29;:::i",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/saadman/Desktop/vesting-contracts/src/test/StakingRewardsVesting.t.sol",
    "exportedSymbols": {
      "Address": [
        3139
      ],
      "Cheats": [
        4323
      ],
      "Context": [
        3161
      ],
      "DSTest": [
        1786
      ],
      "ERC20": [
        2517
      ],
      "IERC20": [
        2595
      ],
      "IERC20Metadata": [
        2620
      ],
      "IVesting": [
        3200
      ],
      "MockERC20": [
        3222
      ],
      "MockStakingRewards": [
        3367
      ],
      "Ownable": [
        1891
      ],
      "ReentrancyGuard": [
        1931
      ],
      "SafeERC20": [
        2844
      ],
      "StakingRewardsTest": [
        4262
      ],
      "Vesting": [
        3940
      ]
    },
    "id": 4263,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3942,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "/Users/saadman/Desktop/vesting-contracts/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "id": 3943,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4263,
        "sourceUnit": 1787,
        "src": "25:26:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/saadman/Desktop/vesting-contracts/src/Vesting.sol",
        "file": "../Vesting.sol",
        "id": 3944,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4263,
        "sourceUnit": 3941,
        "src": "52:24:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/saadman/Desktop/vesting-contracts/src/MockERC20.sol",
        "file": "../MockERC20.sol",
        "id": 3945,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4263,
        "sourceUnit": 3223,
        "src": "77:26:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/saadman/Desktop/vesting-contracts/src/test/utils/Cheats.sol",
        "file": "./utils/Cheats.sol",
        "id": 3946,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4263,
        "sourceUnit": 4324,
        "src": "104:28:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/saadman/Desktop/vesting-contracts/src/MockStakingRewards.sol",
        "file": "../MockStakingRewards.sol",
        "id": 3947,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4263,
        "sourceUnit": 3368,
        "src": "133:35:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3948,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1786,
              "src": "201:6:13"
            },
            "id": 3949,
            "nodeType": "InheritanceSpecifier",
            "src": "201:6:13"
          }
        ],
        "canonicalName": "StakingRewardsTest",
        "contractDependencies": [
          3222,
          3367,
          3940
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4262,
        "linearizedBaseContracts": [
          4262,
          1786
        ],
        "name": "StakingRewardsTest",
        "nameLocation": "179:18:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "44c63eec",
            "id": 3952,
            "mutability": "mutable",
            "name": "vesting",
            "nameLocation": "229:7:13",
            "nodeType": "VariableDeclaration",
            "scope": 4262,
            "src": "214:22:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vesting_$3940",
              "typeString": "contract Vesting"
            },
            "typeName": {
              "id": 3951,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3950,
                "name": "Vesting",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3940,
                "src": "214:7:13"
              },
              "referencedDeclaration": 3940,
              "src": "214:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vesting_$3940",
                "typeString": "contract Vesting"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 3955,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "259:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 4262,
            "src": "242:22:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$3222",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 3954,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3953,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3222,
                "src": "242:9:13"
              },
              "referencedDeclaration": 3222,
              "src": "242:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$3222",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "798b5c8a",
            "id": 3958,
            "mutability": "mutable",
            "name": "StakingRewards",
            "nameLocation": "296:14:13",
            "nodeType": "VariableDeclaration",
            "scope": 4262,
            "src": "270:40:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
              "typeString": "contract MockStakingRewards"
            },
            "typeName": {
              "id": 3957,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3956,
                "name": "MockStakingRewards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3367,
                "src": "270:18:13"
              },
              "referencedDeclaration": 3367,
              "src": "270:18:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
                "typeString": "contract MockStakingRewards"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eabe09ad",
            "id": 3960,
            "mutability": "mutable",
            "name": "addr1",
            "nameLocation": "331:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 4262,
            "src": "316:20:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3959,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "316:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8de38f98",
            "id": 3962,
            "mutability": "mutable",
            "name": "addr2",
            "nameLocation": "357:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 4262,
            "src": "342:20:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3961,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "342:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 3968,
            "mutability": "constant",
            "name": "cheats",
            "nameLocation": "393:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 4262,
            "src": "368:54:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Cheats_$4323",
              "typeString": "contract Cheats"
            },
            "typeName": {
              "id": 3964,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3963,
                "name": "Cheats",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4323,
                "src": "368:6:13"
              },
              "referencedDeclaration": 4323,
              "src": "368:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Cheats_$4323",
                "typeString": "contract Cheats"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 3966,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 107,
                  "src": "409:12:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 3965,
                "name": "Cheats",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4323,
                "src": "402:6:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Cheats_$4323_$",
                  "typeString": "type(contract Cheats)"
                }
              },
              "id": 3967,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "402:20:13",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Cheats_$4323",
                "typeString": "contract Cheats"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4054,
              "nodeType": "Block",
              "src": "453:527:13",
              "statements": [
                {
                  "expression": {
                    "id": 3976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3971,
                      "name": "vesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3952,
                      "src": "463:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vesting_$3940",
                        "typeString": "contract Vesting"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "473:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Vesting_$3940_$",
                          "typeString": "function () returns (contract Vesting)"
                        },
                        "typeName": {
                          "id": 3973,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3972,
                            "name": "Vesting",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3940,
                            "src": "477:7:13"
                          },
                          "referencedDeclaration": 3940,
                          "src": "477:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vesting_$3940",
                            "typeString": "contract Vesting"
                          }
                        }
                      },
                      "id": 3975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "473:13:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vesting_$3940",
                        "typeString": "contract Vesting"
                      }
                    },
                    "src": "463:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vesting_$3940",
                      "typeString": "contract Vesting"
                    }
                  },
                  "id": 3977,
                  "nodeType": "ExpressionStatement",
                  "src": "463:23:13"
                },
                {
                  "expression": {
                    "id": 3984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3978,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3955,
                      "src": "496:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$3222",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "313030303030",
                          "id": 3982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "518:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          }
                        ],
                        "id": 3981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "504:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_MockERC20_$3222_$",
                          "typeString": "function (uint256) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 3980,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3979,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3222,
                            "src": "508:9:13"
                          },
                          "referencedDeclaration": 3222,
                          "src": "508:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$3222",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 3983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "504:21:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$3222",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "496:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$3222",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 3985,
                  "nodeType": "ExpressionStatement",
                  "src": "496:29:13"
                },
                {
                  "expression": {
                    "id": 3991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3986,
                      "name": "addr1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3960,
                      "src": "535:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 3989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "555:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 3987,
                          "name": "cheats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3968,
                          "src": "543:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Cheats_$4323",
                            "typeString": "contract Cheats"
                          }
                        },
                        "id": 3988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4271,
                        "src": "543:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) external returns (address)"
                        }
                      },
                      "id": 3990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "543:14:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "535:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3992,
                  "nodeType": "ExpressionStatement",
                  "src": "535:22:13"
                },
                {
                  "expression": {
                    "id": 3998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3993,
                      "name": "addr2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3962,
                      "src": "567:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 3996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "587:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "id": 3994,
                          "name": "cheats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3968,
                          "src": "575:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Cheats_$4323",
                            "typeString": "contract Cheats"
                          }
                        },
                        "id": 3995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4271,
                        "src": "575:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) external returns (address)"
                        }
                      },
                      "id": 3997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "575:14:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "567:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3999,
                  "nodeType": "ExpressionStatement",
                  "src": "567:22:13"
                },
                {
                  "expression": {
                    "id": 4013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4000,
                      "name": "StakingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3958,
                      "src": "599:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
                        "typeString": "contract MockStakingRewards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 4006,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3955,
                              "src": "647:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$3222",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$3222",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 4005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "639:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4004,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "639:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "639:14:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 4010,
                              "name": "vesting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3952,
                              "src": "662:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vesting_$3940",
                                "typeString": "contract Vesting"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Vesting_$3940",
                                "typeString": "contract Vesting"
                              }
                            ],
                            "id": 4009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "654:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4008,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "654:7:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "654:16:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "616:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_MockStakingRewards_$3367_$",
                          "typeString": "function (address,address) returns (contract MockStakingRewards)"
                        },
                        "typeName": {
                          "id": 4002,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4001,
                            "name": "MockStakingRewards",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3367,
                            "src": "620:18:13"
                          },
                          "referencedDeclaration": 3367,
                          "src": "620:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
                            "typeString": "contract MockStakingRewards"
                          }
                        }
                      },
                      "id": 4012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "616:55:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
                        "typeString": "contract MockStakingRewards"
                      }
                    },
                    "src": "599:72:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
                      "typeString": "contract MockStakingRewards"
                    }
                  },
                  "id": 4014,
                  "nodeType": "ExpressionStatement",
                  "src": "599:72:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4020,
                            "name": "StakingRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3958,
                            "src": "772:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
                              "typeString": "contract MockStakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
                              "typeString": "contract MockStakingRewards"
                            }
                          ],
                          "id": 4019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "764:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4018,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "764:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "764:23:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4015,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3952,
                        "src": "737:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$3940",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3481,
                      "src": "737:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "737:51:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4023,
                  "nodeType": "ExpressionStatement",
                  "src": "737:51:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4029,
                            "name": "StakingRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3958,
                            "src": "820:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
                              "typeString": "contract MockStakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
                              "typeString": "contract MockStakingRewards"
                            }
                          ],
                          "id": 4028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "812:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4027,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "812:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "812:23:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030303030303030303030303030",
                        "id": 4031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "836:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000_by_1",
                          "typeString": "int_const 100000000000000"
                        },
                        "value": "100000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000_by_1",
                          "typeString": "int_const 100000000000000"
                        }
                      ],
                      "expression": {
                        "id": 4024,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3955,
                        "src": "798:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$3222",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 4026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2098,
                      "src": "798:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "798:54:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4033,
                  "nodeType": "ExpressionStatement",
                  "src": "798:54:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4039,
                            "name": "addr1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3960,
                            "src": "895:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "887:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4037,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "887:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "887:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 4041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "903:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 4034,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3958,
                        "src": "862:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3302,
                      "src": "862:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:46:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4043,
                  "nodeType": "ExpressionStatement",
                  "src": "862:46:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 4049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "955:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 4047,
                            "name": "cheats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3968,
                            "src": "943:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cheats_$4323",
                              "typeString": "contract Cheats"
                            }
                          },
                          "id": 4048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4271,
                          "src": "943:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) external returns (address)"
                          }
                        },
                        "id": 4050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "943:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 4051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "959:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 4044,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3958,
                        "src": "918:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3302,
                      "src": "918:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "918:46:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4053,
                  "nodeType": "ExpressionStatement",
                  "src": "918:46:13"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 4055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "438:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "443:2:13"
            },
            "returnParameters": {
              "id": 3970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "453:0:13"
            },
            "scope": 4262,
            "src": "429:551:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4062,
              "nodeType": "Block",
              "src": "1016:33:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 4059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1037:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4058,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "1026:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 4060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1026:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4061,
                  "nodeType": "ExpressionStatement",
                  "src": "1026:16:13"
                }
              ]
            },
            "functionSelector": "3f5a4a2a",
            "id": 4063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExample",
            "nameLocation": "995:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1006:2:13"
            },
            "returnParameters": {
              "id": 4057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1016:0:13"
            },
            "scope": 4262,
            "src": "986:63:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4095,
              "nodeType": "Block",
              "src": "1093:227:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4069,
                        "name": "addr2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3962,
                        "src": "1164:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4066,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3968,
                        "src": "1151:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4323",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4319,
                      "src": "1151:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1151:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4071,
                  "nodeType": "ExpressionStatement",
                  "src": "1151:19:13"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4072,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3958,
                        "src": "1180:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3360,
                      "src": "1180:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1180:26:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4076,
                  "nodeType": "ExpressionStatement",
                  "src": "1180:26:13"
                },
                {
                  "assignments": [
                    4078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4078,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "1225:1:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4095,
                      "src": "1217:9:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4077,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1217:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4083,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4081,
                        "name": "addr2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3962,
                        "src": "1255:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4079,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3952,
                        "src": "1229:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$3940",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNumOfSchedules",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3446,
                      "src": "1229:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1229:32:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1217:44:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4085,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4078,
                          "src": "1278:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1283:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1278:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4084,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1271:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1271:14:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4089,
                  "nodeType": "ExpressionStatement",
                  "src": "1271:14:13"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4090,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3968,
                        "src": "1295:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4323",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4322,
                      "src": "1295:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1295:18:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4094,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:18:13"
                }
              ]
            },
            "functionSelector": "e7423eb8",
            "id": 4096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSpoofRewardsClaim",
            "nameLocation": "1064:21:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1085:2:13"
            },
            "returnParameters": {
              "id": 4065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1093:0:13"
            },
            "scope": 4262,
            "src": "1055:265:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4159,
              "nodeType": "Block",
              "src": "1360:453:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4102,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3960,
                        "src": "1431:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4099,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3968,
                        "src": "1418:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4323",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4319,
                      "src": "1418:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1418:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4104,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:19:13"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4105,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3958,
                        "src": "1447:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3360,
                      "src": "1447:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1447:26:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4109,
                  "nodeType": "ExpressionStatement",
                  "src": "1447:26:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4115,
                                "name": "vesting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3952,
                                "src": "1521:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vesting_$3940",
                                  "typeString": "contract Vesting"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Vesting_$3940",
                                  "typeString": "contract Vesting"
                                }
                              ],
                              "id": 4114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1513:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4113,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1513:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1513:16:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4111,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3955,
                            "src": "1497:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$3222",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 4112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2030,
                          "src": "1497:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1497:33:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4110,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1488:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1488:43:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4119,
                  "nodeType": "EmitStatement",
                  "src": "1483:48:13"
                },
                {
                  "assignments": [
                    4121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4121,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "1549:1:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4159,
                      "src": "1541:9:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4120,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1541:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4126,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4124,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3960,
                        "src": "1579:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4122,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3952,
                        "src": "1553:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$3940",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNumOfSchedules",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3446,
                      "src": "1553:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1553:32:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1541:44:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4128,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4121,
                          "src": "1602:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1606:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1602:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4127,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1595:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1595:13:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4132,
                  "nodeType": "ExpressionStatement",
                  "src": "1595:13:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4134,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4121,
                        "src": "1632:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4133,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1623:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1623:11:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4136,
                  "nodeType": "EmitStatement",
                  "src": "1618:16:13"
                },
                {
                  "assignments": [
                    4138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4138,
                      "mutability": "mutable",
                      "name": "y",
                      "nameLocation": "1652:1:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4159,
                      "src": "1644:9:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4137,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1644:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4145,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4141,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4121,
                          "src": "1687:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 4142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1689:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1687:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4139,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3952,
                        "src": "1656:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$3940",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getScheduleTotalAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3467,
                      "src": "1656:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1656:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1644:47:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4147,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4138,
                        "src": "1715:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4146,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1706:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1706:11:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4149,
                  "nodeType": "EmitStatement",
                  "src": "1701:16:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4151,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3960,
                        "src": "1744:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4150,
                      "name": "log_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1732:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1732:18:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4153,
                  "nodeType": "EmitStatement",
                  "src": "1727:23:13"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4154,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3968,
                        "src": "1788:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4323",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4322,
                      "src": "1788:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1788:18:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4158,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:18:13"
                }
              ]
            },
            "functionSelector": "e6ae9a3e",
            "id": 4160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRewardsClaim",
            "nameLocation": "1336:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1352:2:13"
            },
            "returnParameters": {
              "id": 4098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1360:0:13"
            },
            "scope": 4262,
            "src": "1327:486:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4260,
              "nodeType": "Block",
              "src": "1852:520:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 4168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1888:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 4166,
                            "name": "cheats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3968,
                            "src": "1876:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cheats_$4323",
                              "typeString": "contract Cheats"
                            }
                          },
                          "id": 4167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4271,
                          "src": "1876:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) external returns (address)"
                          }
                        },
                        "id": 4169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1876:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4163,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3968,
                        "src": "1863:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4323",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4319,
                      "src": "1863:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1863:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4171,
                  "nodeType": "ExpressionStatement",
                  "src": "1863:28:13"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4172,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3958,
                        "src": "1901:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3367",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3360,
                      "src": "1901:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1901:26:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4176,
                  "nodeType": "ExpressionStatement",
                  "src": "1901:26:13"
                },
                {
                  "assignments": [
                    4178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4178,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "1945:1:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4260,
                      "src": "1937:9:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4177,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1937:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4186,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 4183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1987:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 4181,
                            "name": "cheats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3968,
                            "src": "1975:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cheats_$4323",
                              "typeString": "contract Cheats"
                            }
                          },
                          "id": 4182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4271,
                          "src": "1975:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) external returns (address)"
                          }
                        },
                        "id": 4184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1975:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4179,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3952,
                        "src": "1949:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$3940",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNumOfSchedules",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3446,
                      "src": "1949:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1949:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1937:53:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4188,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4178,
                        "src": "2014:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4187,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "2005:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:11:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4190,
                  "nodeType": "EmitStatement",
                  "src": "2000:16:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4192,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4178,
                          "src": "2033:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2037:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2033:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4191,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2026:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2026:13:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4196,
                  "nodeType": "ExpressionStatement",
                  "src": "2026:13:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4200,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2061:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2061:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 4202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2079:7:13",
                          "subdenomination": "weeks",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1814400_by_1",
                            "typeString": "int_const 1814400"
                          },
                          "value": "3"
                        },
                        "src": "2061:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4197,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3968,
                        "src": "2049:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4323",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4276,
                      "src": "2049:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2049:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4205,
                  "nodeType": "ExpressionStatement",
                  "src": "2049:38:13"
                },
                {
                  "assignments": [
                    4207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4207,
                      "mutability": "mutable",
                      "name": "y",
                      "nameLocation": "2105:1:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 4260,
                      "src": "2097:9:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4206,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2097:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4214,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4210,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4178,
                          "src": "2140:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 4211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2142:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2140:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4208,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3952,
                        "src": "2109:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$3940",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getScheduleTotalAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3467,
                      "src": "2109:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2097:47:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4216,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4207,
                        "src": "2168:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4215,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "2159:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2159:11:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4218,
                  "nodeType": "EmitStatement",
                  "src": "2154:16:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "34",
                                  "id": 4224,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2240:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  }
                                ],
                                "expression": {
                                  "id": 4222,
                                  "name": "cheats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3968,
                                  "src": "2228:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Cheats_$4323",
                                    "typeString": "contract Cheats"
                                  }
                                },
                                "id": 4223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "addr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4271,
                                "src": "2228:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) external returns (address)"
                                }
                              },
                              "id": 4225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2228:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 4220,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3955,
                              "src": "2212:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$3222",
                                "typeString": "contract MockERC20"
                              }
                            },
                            "id": 4221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2030,
                            "src": "2212:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 4226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2212:31:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2245:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2212:34:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4219,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2205:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:42:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4230,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:42:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 4236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2282:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 4234,
                            "name": "cheats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3968,
                            "src": "2270:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cheats_$4323",
                              "typeString": "contract Cheats"
                            }
                          },
                          "id": 4235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4271,
                          "src": "2270:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) external returns (address)"
                          }
                        },
                        "id": 4237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2270:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4231,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3968,
                        "src": "2257:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4323",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4319,
                      "src": "2257:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2257:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4239,
                  "nodeType": "ExpressionStatement",
                  "src": "2257:28:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4243,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4178,
                          "src": "2309:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 4244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2311:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2309:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4240,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3952,
                        "src": "2295:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$3940",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3782,
                      "src": "2295:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2295:18:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4247,
                  "nodeType": "ExpressionStatement",
                  "src": "2295:18:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "34",
                                  "id": 4253,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2358:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  }
                                ],
                                "expression": {
                                  "id": 4251,
                                  "name": "cheats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3968,
                                  "src": "2346:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Cheats_$4323",
                                    "typeString": "contract Cheats"
                                  }
                                },
                                "id": 4252,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "addr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4271,
                                "src": "2346:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) external returns (address)"
                                }
                              },
                              "id": 4254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2346:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 4249,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3955,
                              "src": "2330:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$3222",
                                "typeString": "contract MockERC20"
                              }
                            },
                            "id": 4250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2030,
                            "src": "2330:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 4255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2330:31:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2362:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2330:33:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4248,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2323:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2323:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4259,
                  "nodeType": "ExpressionStatement",
                  "src": "2323:41:13"
                }
              ]
            },
            "functionSelector": "4ef1871f",
            "id": 4261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testVestingClaim",
            "nameLocation": "1828:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1844:2:13"
            },
            "returnParameters": {
              "id": 4162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1852:0:13"
            },
            "scope": 4262,
            "src": "1819:553:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4263,
        "src": "170:2204:13",
        "usedErrors": []
      }
    ],
    "src": "0:2374:13"
  }
}
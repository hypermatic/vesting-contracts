{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "StakingRewards",
      "outputs": [
        {
          "internalType": "contract MockStakingRewards",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addr1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addr2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExample",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSpoofRewardsClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testVestforAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testVestingClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testVestingSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract MockERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vesting",
      "outputs": [
        {
          "internalType": "contract Vesting",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b5061480a8061002d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000e05760003560e01c806398872f161162000097578063e7423eb8116200006e578063e7423eb81462000193578063eabe09ad146200019d578063fa7626d414620001b1578063fc0c546a14620001bf57600080fd5b806398872f161462000164578063b29f36cb146200016e578063ba414fa6146200017857600080fd5b80630a9254e414620000e55780633f5a4a2a14620000f157806344c63eec14620000fb5780634ef1871f1462000132578063798b5c8a146200013c5780638de38f981462000150575b600080fd5b620000ef620001d3565b005b620000ef62000657565b60005462000115906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b620000ef62000665565b60025462000115906001600160a01b031681565b60045462000115906001600160a01b031681565b620000ef62000eaf565b620000ef6200122b565b6200018262001860565b604051901515815260200162000129565b620000ef6200198b565b60035462000115906001600160a01b031681565b600054620001829060ff1681565b60015462000115906001600160a01b031681565b604051620001e19062001cd9565b604051809103906000f080158015620001fe573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550620186a0604051620002379062001ce7565b908152602001604051809103906000f0801580156200025a573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b03929092169190911781556040516001625e79b760e01b031981526004810191909152600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af1158015620002cd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002f3919062001d03565b600380546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b0319815260026004820152600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af115801562000364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038a919062001d03565b600480546001600160a01b0319166001600160a01b0392831617905560015460005460405191831692620100009091041690620003c79062001cf5565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620003fb573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b03928316908117909155600054604051639c5bbc8960e01b8152600481019290925262010000900490911690639c5bbc8990602401600060405180830381600087803b1580156200046157600080fd5b505af115801562000476573d6000803e3d6000fd5b505060015460025460405163095ea7b360e01b81526001600160a01b039182166004820152655af3107a400060248201529116925063095ea7b391506044016020604051808303816000875af1158015620004d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004fb919062001d35565b50600254600354604051630eacccaf60e41b81526001600160a01b0391821660048201526103e8602482015291169063eacccaf090604401600060405180830381600087803b1580156200054e57600080fd5b505af115801562000563573d6000803e3d6000fd5b50506002546040516001625e79b760e01b031981526004808201526001600160a01b03909116925063eacccaf09150600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af1158015620005cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005f2919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526103e86024820152604401600060405180830381600087803b1580156200063c57600080fd5b505af115801562000651573d6000803e3d6000fd5b50505050565b62000663600162001b5e565b565b6040516001625e79b760e01b03198152600480820152600080516020620047be8339815191529063ca669fa790829063ffa18649906024016020604051808303816000875af1158015620006bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006e3919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200072557600080fd5b505af11580156200073a573d6000803e3d6000fd5b505060025460405163af0fe49760e01b81526103e860048201526001600160a01b03909116925063af0fe4979150602401600060405180830381600087803b1580156200078657600080fd5b505af11580156200079b573d6000803e3d6000fd5b50506040516001625e79b760e01b03198152600480820152600080516020620047be833981519152925063ca669fa79150829063ffa18649906024016020604051808303816000875af1158015620007f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200081d919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200085f57600080fd5b505af115801562000874573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620008c957600080fd5b505af1158015620008de573d6000803e3d6000fd5b5050600080546040516001625e79b760e01b031981526004808201529193506201000090046001600160a01b0316915063cba9614a90600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af11580156200094e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000974919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620009b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009df919062001d59565b9050600080516020620047de8339815191528160405162000a0291815260200190565b60405180910390a16000811162000a1d5762000a1d62001d73565b600080516020620047be83398151915263e5d6bf0262000a4142621baf8062001d9f565b6040518263ffffffff1660e01b815260040162000a6091815260200190565b600060405180830381600087803b15801562000a7b57600080fd5b505af115801562000a90573d6000803e3d6000fd5b5050600080549092506201000090046001600160a01b0316905063310934ca62000abc60018562001dba565b6040518263ffffffff1660e01b815260040162000adb91815260200190565b602060405180830381865afa15801562000af9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b1f919062001d59565b9050600080516020620047de8339815191528160405162000b4291815260200190565b60405180910390a16001546040516001625e79b760e01b031981526004808201526001600160a01b03909116906370a0823190600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af115801562000baf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bd5919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562000c1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c40919062001d59565b1562000c505762000c5062001d73565b6040516001625e79b760e01b03198152600480820152600080516020620047be8339815191529063ca669fa790829063ffa18649906024016020604051808303816000875af115801562000ca8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cce919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801562000d1057600080fd5b505af115801562000d25573d6000803e3d6000fd5b50506000546201000090046001600160a01b0316915063379607f5905062000d4f60018562001dba565b6040518263ffffffff1660e01b815260040162000d6e91815260200190565b600060405180830381600087803b15801562000d8957600080fd5b505af115801562000d9e573d6000803e3d6000fd5b50506001546040516001625e79b760e01b03198152600480820152600093506001600160a01b0390911691506370a0823190600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af115801562000e0a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e30919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562000e75573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e9b919062001d59565b1162000eab5762000eab62001d73565b5050565b60035460405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620047be8339815191529063ca669fa790602401600060405180830381600087803b15801562000f0457600080fd5b505af115801562000f19573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000f6e57600080fd5b505af115801562000f83573d6000803e3d6000fd5b50506001546000546040516370a0823160e01b81526001600160a01b036201000090920482166004820152600080516020620047de8339815191529450911691506370a0823190602401602060405180830381865afa15801562000feb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001011919062001d59565b60405190815260200160405180910390a1600080546003546040516365d4b0a560e11b81526001600160a01b03918216600482015262010000909204169063cba9614a90602401602060405180830381865afa15801562001076573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200109c919062001d59565b905060008111620010b157620010b162001d73565b604051818152600080516020620047de8339815191529060200160405180910390a1600080546201000090046001600160a01b031663310934ca620010f860018562001dba565b6040518263ffffffff1660e01b81526004016200111791815260200190565b602060405180830381865afa15801562001135573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200115b919062001d59565b9050600080516020620047de833981519152816040516200117e91815260200190565b60405180910390a16003546040516001600160a01b0390911681527f7ae74c527414ae135fd97047b12921a5ec3911b804197855d67e25c7b75ee6f39060200160405180910390a1604080516390c5013b60e01b81529051600080516020620047be833981519152916390c5013b91600480830192600092919082900301818387803b1580156200120e57600080fd5b505af115801562001223573d6000803e3d6000fd5b505050505050565b6002546040516001625e79b760e01b03198152600560048201526001600160a01b039091169063eacccaf090600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af115801562001291573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012b7919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526103e86024820152604401600060405180830381600087803b1580156200130157600080fd5b505af115801562001316573d6000803e3d6000fd5b50506002546040516001625e79b760e01b03198152600660048201526001600160a01b03909116925063eacccaf09150600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af115801562001380573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013a6919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526103e86024820152604401600060405180830381600087803b158015620013f057600080fd5b505af115801562001405573d6000803e3d6000fd5b50506040516001625e79b760e01b0319815260056004820152600080516020620047be833981519152925063ca669fa79150829063ffa18649906024016020604051808303816000875af115801562001462573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001488919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b158015620014ca57600080fd5b505af1158015620014df573d6000803e3d6000fd5b505060025460405163af0fe49760e01b81526103e860048201526001600160a01b03909116925063af0fe4979150602401600060405180830381600087803b1580156200152b57600080fd5b505af115801562001540573d6000803e3d6000fd5b50506040516001625e79b760e01b0319815260066004820152600080516020620047be833981519152925063ca669fa79150829063ffa18649906024016020604051808303816000875af11580156200159d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015c3919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200160557600080fd5b505af11580156200161a573d6000803e3d6000fd5b505060025460405163af0fe49760e01b81526103e860048201526001600160a01b03909116925063af0fe4979150602401600060405180830381600087803b1580156200166657600080fd5b505af11580156200167b573d6000803e3d6000fd5b5050604080516390c5013b60e01b81529051600080516020620047be83398151915293506390c5013b9250600480830192600092919082900301818387803b158015620016c757600080fd5b505af1158015620016dc573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b031663dd1113b26040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200173157600080fd5b505af115801562001746573d6000803e3d6000fd5b5050600080546040516001625e79b760e01b03198152600560048201529193506201000090046001600160a01b0316915063cba9614a90600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af1158015620017b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017dd919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562001822573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001848919062001d59565b9050600081116200185d576200185d62001d73565b50565b60008054610100900460ff1615620018815750600054610100900460ff1690565b6000600080516020620047be8339815191523b15620019865760408051600080516020620047be833981519152602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162001908917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001e12565b60408051601f1981840301815290829052620019249162001e38565b6000604051808303816000865af19150503d806000811462001963576040519150601f19603f3d011682016040523d82523d6000602084013e62001968565b606091505b509150508080602001905181019062001982919062001d35565b9150505b919050565b6004805460405163ca669fa760e01b81526001600160a01b0390911691810191909152600080516020620047be8339815191529063ca669fa790602401600060405180830381600087803b158015620019e357600080fd5b505af1158015620019f8573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001a4d57600080fd5b505af115801562001a62573d6000803e3d6000fd5b505060008054600480546040516365d4b0a560e11b81526001600160a01b039182169281019290925292945062010000909104909116915063cba9614a90602401602060405180830381865afa15801562001ac1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ae7919062001d59565b9050801562001afa5762001afa62001d73565b604080516390c5013b60e01b81529051600080516020620047be833981519152916390c5013b91600480830192600092919082900301818387803b15801562001b4257600080fd5b505af115801562001b57573d6000803e3d6000fd5b5050505050565b806200185d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001bc49060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200185d600080516020620047be8339815191523b1562001cc85760408051600080516020620047be833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262001c63929160200162001e12565b60408051601f198184030181529082905262001c7f9162001e38565b6000604051808303816000865af19150503d806000811462001cbe576040519150601f19603f3d011682016040523d82523d6000602084013e62001cc3565b606091505b505050505b6000805461ff001916610100179055565b61143e8062001e4783390190565b610b34806200328583390190565b610a058062003db983390190565b60006020828403121562001d1657600080fd5b81516001600160a01b038116811462001d2e57600080fd5b9392505050565b60006020828403121562001d4857600080fd5b8151801515811462001d2e57600080fd5b60006020828403121562001d6c57600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111562001db55762001db562001d89565b500190565b60008282101562001dcf5762001dcf62001d89565b500390565b6000815160005b8181101562001df7576020818501810151868301520162001ddb565b8181111562001e07576000828601525b509290920192915050565b6001600160e01b031983168152600062001e30600483018462001dd4565b949350505050565b600062001d2e828462001dd456fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6113c08061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638da5cb5b11610097578063cbf9fe5f11610066578063cbf9fe5f14610333578063df681c1414610353578063f2fde38b14610373578063ffb4b1be1461038657600080fd5b80638da5cb5b146102c95780639c4e64e0146102e45780639c5bbc89146102f7578063cba9614a1461030a57600080fd5b8063379607f5116100d3578063379607f5146101dc578063673448dd146101ef578063715018a614610222578063854e96821461022a57600080fd5b8062f714ce146101045780630d53588314610119578063297611361461012c578063310934ca1461013f575b600080fd5b610117610112366004611059565b610399565b005b610117610127366004611093565b610587565b61011761013a366004611149565b6108a2565b6101c961014d3660046111fa565b33600090815260016020818152604080842094845293815291839020835160e08101855281548082529282015493810193909352600281015493830193909352600383015460608301526004830154608083015260059092015460ff8116151560a083015261010090046001600160a01b031660c09091015290565b6040519081526020015b60405180910390f35b6101176101ea3660046111fa565b610993565b6102126101fd366004611213565b60036020526000908152604090205460ff1681565b60405190151581526020016101d3565b610117610c18565b610289610238366004611235565b600160208181526000938452604080852090915291835291208054918101546002820154600383015460048401546005909401549293919290919060ff81169061010090046001600160a01b031687565b6040805197885260208801969096529486019390935260608501919091526080840152151560a08301526001600160a01b031660c082015260e0016101d3565b6000546040516001600160a01b0390911681526020016101d3565b6101c96102f236600461125f565b610c4e565b610117610305366004611213565b610c93565b6101c9610318366004611213565b6001600160a01b031660009081526002602052604090205490565b6101c9610341366004611213565b60046020526000908152604090205481565b6101c9610361366004611213565b60026020526000908152604090205481565b610117610381366004611213565b610ce1565b610117610394366004611235565b610d7c565b6000546001600160a01b031633146103cc5760405162461bcd60e51b81526004016103c390611291565b60405180910390fd5b6001600160a01b0381166000818152600460208190526040918290205491516370a0823160e01b8152309181019190915283928592916370a0823190602401602060405180830381865afa158015610428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044c91906112c6565b61045691906112f5565b10156104a45760405162461bcd60e51b815260206004820152601760248201527f56657374696e673a2043616e277420776974686472617700000000000000000060448201526064016103c3565b806001600160a01b031663a9059cbb6104c56000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018690526044016020604051808303816000875af1158015610512573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610536919061130c565b6105825760405162461bcd60e51b815260206004820152601860248201527f56657374696e673a207769746864726177206661696c6564000000000000000060448201526064016103c3565b505050565b6000546001600160a01b03163314806105af57503360009081526003602052604090205460ff165b6105cb5760405162461bcd60e51b81526004016103c390611291565b6000821180156105db5750828210155b80156105e75750600086115b6106335760405162461bcd60e51b815260206004820152601f60248201527f56657374696e673a20696e76616c69642076657374696e6720706172616d730060448201526064016103c3565b6001600160a01b0385166000908152600460205260409020546106568782611329565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa15801561069a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106be91906112c6565b101561070c5760405162461bcd60e51b815260206004820152601a60248201527f56657374696e673a204e6f7420656e6f75676820746f6b656e7300000000000060448201526064016103c3565b6001600160a01b038816600090815260026020908152604080832054815160e0810183528b8152928301939093528101849052606081016107508762093a80611341565b61075a9086611329565b815260200161076c8662093a80611341565b6107769086611329565b81528715156020808301919091526001600160a01b03808b166040938401528c811660009081526001808452848220878352845290849020855181559285015183820155928401516002830155606084015160038301556080840151600483015560a08401516005909201805460c09095015190911661010002610100600160a81b0319921515929092166001600160a81b03199094169390931717909155610820908290611329565b6001600160a01b038a166000908152600260205260409020556108438883611329565b6001600160a01b0380891660009081526004602090815260409182902093909355518a8152908b16917fd4a50953e9ae2104f507446be8391c79b33e1e86e626473e34bb79eb5fea1f3e910160405180910390a2505050505050505050565b6000546001600160a01b031633146108cc5760405162461bcd60e51b81526004016103c390611291565b8786811461091c5760405162461bcd60e51b815260206004820152601d60248201527f56657374696e673a204172726179206c656e677468732064696666657200000060448201526064016103c3565b60005b81811015610986576109748b8b8381811061093c5761093c611360565b90506020020160208101906109519190611213565b8a8a8481811061096357610963611360565b905060200201358989898989610587565b8061097e81611376565b91505061091f565b5050505050505050505050565b3360008181526001602090815260408083208584528252918290208054835194855291840191909152917f33ac953613b6ef91c4afa2b6adb073486ec4b038cbc7fb7be7ff98f5f261e77e910160405180910390a14281600301541115610a3c5760405162461bcd60e51b815260206004820152601a60248201527f56657374696e673a20636c696666206e6f74207265616368656400000000000060448201526064016103c3565b8054610a835760405162461bcd60e51b815260206004820152601660248201527556657374696e673a206e6f7420636c61696d61626c6560501b60448201526064016103c3565b6000610a9d82600001544284600201548560040154610c4e565b82549091508111610aae5780610ab1565b81545b90506000826001015482610ac591906112f5565b60018401839055600584015461010090046001600160a01b0316600090815260046020526040902054909150610afc9082906112f5565b6005840180546001600160a01b03610100918290048116600090815260046020819052604091829020959095559254925163a9059cbb60e01b81523394810194909452602484018590529104169063a9059cbb906044016020604051808303816000875af1158015610b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b96919061130c565b610bdd5760405162461bcd60e51b815260206004820152601860248201527715995cdd1a5b99ce881d1c985b9cd9995c8819985a5b195960421b60448201526064016103c3565b60405182815233907f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d49060200160405180910390a250505050565b6000546001600160a01b03163314610c425760405162461bcd60e51b81526004016103c390611291565b610c4c6000610fed565b565b600082841015610c6057506000610c8b565b610c6a83836112f5565b610c7484866112f5565b610c7e9087611341565b610c889190611391565b90505b949350505050565b6000546001600160a01b03163314610cbd5760405162461bcd60e51b81526004016103c390611291565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b6000546001600160a01b03163314610d0b5760405162461bcd60e51b81526004016103c390611291565b6001600160a01b038116610d705760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c3565b610d7981610fed565b50565b6000546001600160a01b03163314610da65760405162461bcd60e51b81526004016103c390611291565b6001600160a01b03821660009081526001602090815260408083208484529091529020600581015460ff1615610e1e5760405162461bcd60e51b815260206004820152601960248201527f56657374696e673a204163636f756e742069732066697865640000000000000060448201526064016103c3565b60018101548154600091610e31916112f5565b905080610e805760405162461bcd60e51b815260206004820152601e60248201527f56657374696e673a206e6f206f75747374616e64696e6720746f6b656e73000060448201526064016103c3565b6000808355600583015461010090046001600160a01b0316815260046020526040902054610eaf9082906112f5565b6005830180546001600160a01b036101009182900481166000908152600460205260409020939093559054041663a9059cbb610ef36000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610f40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f64919061130c565b610fab5760405162461bcd60e51b815260206004820152601860248201527715995cdd1a5b99ce881d1c985b9cd9995c8819985a5b195960421b60448201526064016103c3565b6040516001600160a01b03851681527f398bd6b21ae4164ec322fb0eb8c2eb6277f36fd41903fbbed594dfe1255912819060200160405180910390a150505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461105457600080fd5b919050565b6000806040838503121561106c57600080fd5b8235915061107c6020840161103d565b90509250929050565b8015158114610d7957600080fd5b600080600080600080600060e0888a0312156110ae57600080fd5b6110b78861103d565b9650602088013595506110cc6040890161103d565b945060608801356110dc81611085565b9699959850939660808101359560a0820135955060c0909101359350915050565b60008083601f84011261110f57600080fd5b50813567ffffffffffffffff81111561112757600080fd5b6020830191508360208260051b850101111561114257600080fd5b9250929050565b600080600080600080600080600060e08a8c03121561116757600080fd5b893567ffffffffffffffff8082111561117f57600080fd5b61118b8d838e016110fd565b909b50995060208c01359150808211156111a457600080fd5b506111b18c828d016110fd565b90985096506111c4905060408b0161103d565b945060608a01356111d481611085565b8094505060808a0135925060a08a0135915060c08a013590509295985092959850929598565b60006020828403121561120c57600080fd5b5035919050565b60006020828403121561122557600080fd5b61122e8261103d565b9392505050565b6000806040838503121561124857600080fd5b6112518361103d565b946020939093013593505050565b6000806000806080858703121561127557600080fd5b5050823594602084013594506040840135936060013592509050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156112d857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611307576113076112df565b500390565b60006020828403121561131e57600080fd5b815161122e81611085565b6000821982111561133c5761133c6112df565b500190565b600081600019048311821515161561135b5761135b6112df565b500290565b634e487b7160e01b600052603260045260246000fd5b600060001982141561138a5761138a6112df565b5060010190565b6000826113ae57634e487b7160e01b600052601260045260246000fd5b50049056fea164736f6c634300080b000a60806040523480156200001157600080fd5b5060405162000b3438038062000b34833981016040819052620000349162000248565b604051806040016040528060078152602001662ca5a9b1b7b4b760c91b81525060405180604001604052806003815260200162594b5360e81b815250816003908051906020019062000088929190620001a2565b5080516200009e906004906020840190620001a2565b505050620000b33382620000ba60201b60201c565b50620002c6565b6001600160a01b038216620001155760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000129919062000262565b90915550506001600160a01b038216600090815260208190526040812080548392906200015890849062000262565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001b09062000289565b90600052602060002090601f016020900481019282620001d457600085556200021f565b82601f10620001ef57805160ff19168380011785556200021f565b828001600101855582156200021f579182015b828111156200021f57825182559160200191906001019062000202565b506200022d92915062000231565b5090565b5b808211156200022d576000815560010162000232565b6000602082840312156200025b57600080fd5b5051919050565b600082198211156200028457634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200029e57607f821691505b60208210811415620002c057634e487b7160e01b600052602260045260246000fd5b50919050565b61085e80620002d66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea164736f6c634300080b000a608060405234801561001057600080fd5b50604051610a05380380610a0583398101604081905261002f91610081565b6001600081905580546001600160a01b039384166001600160a01b031991821617909155600380549290931691161790556100b4565b80516001600160a01b038116811461007c57600080fd5b919050565b6000806040838503121561009457600080fd5b61009d83610065565b91506100ab60208401610065565b90509250929050565b610942806100c36000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d1af0c7d1161005b578063d1af0c7d14610108578063dd1113b21461011b578063e4d75c9d14610123578063eacccaf01461015357600080fd5b80630700037d1461008d5780633d18b912146100c057806344c63eec146100ca578063af0fe497146100f5575b600080fd5b6100ad61009b36600461079a565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100c8610166565b005b6003546100dd906001600160a01b031681565b6040516001600160a01b0390911681526020016100b7565b6100c86101033660046107b5565b6102b6565b6001546100dd906001600160a01b031681565b6100c8610334565b6100c861013136600461079a565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6100c86101613660046107ce565b61043e565b600260005414156101be5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000818155338152602091909152604090205480156102ae5733600090815260026020526040812055600354600154610206916001600160a01b03918216911683610472565b6003805460018054604051630d53588360e01b81526001600160a01b0393841694630d5358839461024694339489949216929091600490429082016107f8565b600060405180830381600087803b15801561026057600080fd5b505af1158015610274573d6000803e3d6000fd5b50506040518381523392507fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486915060200160405180910390a25b506001600055565b600081116102c357600080fd5b336000908152600460205260409020546102dd90826104da565b336000818152600460205260408120929092556005805460018101825592527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090910180546001600160a01b031916909117905550565b60005b60055481101561043b5760006005828154811061035657610356610839565b60009182526020808320909101546001600160a01b031680835260029091526040909120549091508015610426576001600160a01b038083166000908152600260205260408120556003546001546103b392908116911683610472565b6003805460018054604051630d53588360e01b81526001600160a01b0393841694630d535883946103f394899489949216929091600490429082016107f8565b600060405180830381600087803b15801561040d57600080fd5b505af1158015610421573d6000803e3d6000fd5b505050505b5050808061043390610865565b915050610337565b50565b600154610456906001600160a01b03163330846104ed565b6001600160a01b03909116600090815260026020526040902055565b6040516001600160a01b0383166024820152604481018290526104d590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261052b565b505050565b60006104e68284610880565b9392505050565b6040516001600160a01b03808516602483015283166044820152606481018290526105259085906323b872dd60e01b9060840161049e565b50505050565b6000610580826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105fd9092919063ffffffff16565b8051909150156104d5578080602001905181019061059e9190610898565b6104d55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101b5565b606061060c8484600085610614565b949350505050565b6060824710156106755760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101b5565b6001600160a01b0385163b6106cc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101b5565b600080866001600160a01b031685876040516106e891906108e6565b60006040518083038185875af1925050503d8060008114610725576040519150601f19603f3d011682016040523d82523d6000602084013e61072a565b606091505b509150915061073a828286610745565b979650505050505050565b606083156107545750816104e6565b8251156107645782518084602001fd5b8160405162461bcd60e51b81526004016101b59190610902565b80356001600160a01b038116811461079557600080fd5b919050565b6000602082840312156107ac57600080fd5b6104e68261077e565b6000602082840312156107c757600080fd5b5035919050565b600080604083850312156107e157600080fd5b6107ea8361077e565b946020939093013593505050565b6001600160a01b03978816815260208101969096529390951660408501529015156060840152608083015260a082019290925260c081019190915260e00190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156108795761087961084f565b5060010190565b600082198211156108935761089361084f565b500190565b6000602082840312156108aa57600080fd5b815180151581146104e657600080fd5b60005b838110156108d55781810151838201526020016108bd565b838111156105255750506000910152565b600082516108f88184602087016108ba565b9190910192915050565b60208152600082518060208401526109218160408501602087016108ba565b601f01601f1916919091016040019291505056fea164736f6c634300080b000a0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d2cab9790510fd8bdfbd2115288db33fec66691d476efc5427cfd4c0969301755a164736f6c634300080b000a",
    "sourceMap": "170:2576:14:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;170:2576:14;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000e05760003560e01c806398872f161162000097578063e7423eb8116200006e578063e7423eb81462000193578063eabe09ad146200019d578063fa7626d414620001b1578063fc0c546a14620001bf57600080fd5b806398872f161462000164578063b29f36cb146200016e578063ba414fa6146200017857600080fd5b80630a9254e414620000e55780633f5a4a2a14620000f157806344c63eec14620000fb5780634ef1871f1462000132578063798b5c8a146200013c5780638de38f981462000150575b600080fd5b620000ef620001d3565b005b620000ef62000657565b60005462000115906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b620000ef62000665565b60025462000115906001600160a01b031681565b60045462000115906001600160a01b031681565b620000ef62000eaf565b620000ef6200122b565b6200018262001860565b604051901515815260200162000129565b620000ef6200198b565b60035462000115906001600160a01b031681565b600054620001829060ff1681565b60015462000115906001600160a01b031681565b604051620001e19062001cd9565b604051809103906000f080158015620001fe573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550620186a0604051620002379062001ce7565b908152602001604051809103906000f0801580156200025a573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b03929092169190911781556040516001625e79b760e01b031981526004810191909152600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af1158015620002cd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002f3919062001d03565b600380546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b0319815260026004820152600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af115801562000364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038a919062001d03565b600480546001600160a01b0319166001600160a01b0392831617905560015460005460405191831692620100009091041690620003c79062001cf5565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620003fb573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b03928316908117909155600054604051639c5bbc8960e01b8152600481019290925262010000900490911690639c5bbc8990602401600060405180830381600087803b1580156200046157600080fd5b505af115801562000476573d6000803e3d6000fd5b505060015460025460405163095ea7b360e01b81526001600160a01b039182166004820152655af3107a400060248201529116925063095ea7b391506044016020604051808303816000875af1158015620004d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004fb919062001d35565b50600254600354604051630eacccaf60e41b81526001600160a01b0391821660048201526103e8602482015291169063eacccaf090604401600060405180830381600087803b1580156200054e57600080fd5b505af115801562000563573d6000803e3d6000fd5b50506002546040516001625e79b760e01b031981526004808201526001600160a01b03909116925063eacccaf09150600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af1158015620005cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005f2919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526103e86024820152604401600060405180830381600087803b1580156200063c57600080fd5b505af115801562000651573d6000803e3d6000fd5b50505050565b62000663600162001b5e565b565b6040516001625e79b760e01b03198152600480820152600080516020620047be8339815191529063ca669fa790829063ffa18649906024016020604051808303816000875af1158015620006bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006e3919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200072557600080fd5b505af11580156200073a573d6000803e3d6000fd5b505060025460405163af0fe49760e01b81526103e860048201526001600160a01b03909116925063af0fe4979150602401600060405180830381600087803b1580156200078657600080fd5b505af11580156200079b573d6000803e3d6000fd5b50506040516001625e79b760e01b03198152600480820152600080516020620047be833981519152925063ca669fa79150829063ffa18649906024016020604051808303816000875af1158015620007f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200081d919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200085f57600080fd5b505af115801562000874573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620008c957600080fd5b505af1158015620008de573d6000803e3d6000fd5b5050600080546040516001625e79b760e01b031981526004808201529193506201000090046001600160a01b0316915063cba9614a90600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af11580156200094e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000974919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620009b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009df919062001d59565b9050600080516020620047de8339815191528160405162000a0291815260200190565b60405180910390a16000811162000a1d5762000a1d62001d73565b600080516020620047be83398151915263e5d6bf0262000a4142621baf8062001d9f565b6040518263ffffffff1660e01b815260040162000a6091815260200190565b600060405180830381600087803b15801562000a7b57600080fd5b505af115801562000a90573d6000803e3d6000fd5b5050600080549092506201000090046001600160a01b0316905063310934ca62000abc60018562001dba565b6040518263ffffffff1660e01b815260040162000adb91815260200190565b602060405180830381865afa15801562000af9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b1f919062001d59565b9050600080516020620047de8339815191528160405162000b4291815260200190565b60405180910390a16001546040516001625e79b760e01b031981526004808201526001600160a01b03909116906370a0823190600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af115801562000baf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bd5919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562000c1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c40919062001d59565b1562000c505762000c5062001d73565b6040516001625e79b760e01b03198152600480820152600080516020620047be8339815191529063ca669fa790829063ffa18649906024016020604051808303816000875af115801562000ca8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cce919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801562000d1057600080fd5b505af115801562000d25573d6000803e3d6000fd5b50506000546201000090046001600160a01b0316915063379607f5905062000d4f60018562001dba565b6040518263ffffffff1660e01b815260040162000d6e91815260200190565b600060405180830381600087803b15801562000d8957600080fd5b505af115801562000d9e573d6000803e3d6000fd5b50506001546040516001625e79b760e01b03198152600480820152600093506001600160a01b0390911691506370a0823190600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af115801562000e0a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e30919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562000e75573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e9b919062001d59565b1162000eab5762000eab62001d73565b5050565b60035460405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620047be8339815191529063ca669fa790602401600060405180830381600087803b15801562000f0457600080fd5b505af115801562000f19573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000f6e57600080fd5b505af115801562000f83573d6000803e3d6000fd5b50506001546000546040516370a0823160e01b81526001600160a01b036201000090920482166004820152600080516020620047de8339815191529450911691506370a0823190602401602060405180830381865afa15801562000feb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001011919062001d59565b60405190815260200160405180910390a1600080546003546040516365d4b0a560e11b81526001600160a01b03918216600482015262010000909204169063cba9614a90602401602060405180830381865afa15801562001076573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200109c919062001d59565b905060008111620010b157620010b162001d73565b604051818152600080516020620047de8339815191529060200160405180910390a1600080546201000090046001600160a01b031663310934ca620010f860018562001dba565b6040518263ffffffff1660e01b81526004016200111791815260200190565b602060405180830381865afa15801562001135573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200115b919062001d59565b9050600080516020620047de833981519152816040516200117e91815260200190565b60405180910390a16003546040516001600160a01b0390911681527f7ae74c527414ae135fd97047b12921a5ec3911b804197855d67e25c7b75ee6f39060200160405180910390a1604080516390c5013b60e01b81529051600080516020620047be833981519152916390c5013b91600480830192600092919082900301818387803b1580156200120e57600080fd5b505af115801562001223573d6000803e3d6000fd5b505050505050565b6002546040516001625e79b760e01b03198152600560048201526001600160a01b039091169063eacccaf090600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af115801562001291573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012b7919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526103e86024820152604401600060405180830381600087803b1580156200130157600080fd5b505af115801562001316573d6000803e3d6000fd5b50506002546040516001625e79b760e01b03198152600660048201526001600160a01b03909116925063eacccaf09150600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af115801562001380573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013a6919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526103e86024820152604401600060405180830381600087803b158015620013f057600080fd5b505af115801562001405573d6000803e3d6000fd5b50506040516001625e79b760e01b0319815260056004820152600080516020620047be833981519152925063ca669fa79150829063ffa18649906024016020604051808303816000875af115801562001462573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001488919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b158015620014ca57600080fd5b505af1158015620014df573d6000803e3d6000fd5b505060025460405163af0fe49760e01b81526103e860048201526001600160a01b03909116925063af0fe4979150602401600060405180830381600087803b1580156200152b57600080fd5b505af115801562001540573d6000803e3d6000fd5b50506040516001625e79b760e01b0319815260066004820152600080516020620047be833981519152925063ca669fa79150829063ffa18649906024016020604051808303816000875af11580156200159d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015c3919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200160557600080fd5b505af11580156200161a573d6000803e3d6000fd5b505060025460405163af0fe49760e01b81526103e860048201526001600160a01b03909116925063af0fe4979150602401600060405180830381600087803b1580156200166657600080fd5b505af11580156200167b573d6000803e3d6000fd5b5050604080516390c5013b60e01b81529051600080516020620047be83398151915293506390c5013b9250600480830192600092919082900301818387803b158015620016c757600080fd5b505af1158015620016dc573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b031663dd1113b26040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200173157600080fd5b505af115801562001746573d6000803e3d6000fd5b5050600080546040516001625e79b760e01b03198152600560048201529193506201000090046001600160a01b0316915063cba9614a90600080516020620047be8339815191529063ffa18649906024016020604051808303816000875af1158015620017b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017dd919062001d03565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562001822573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001848919062001d59565b9050600081116200185d576200185d62001d73565b50565b60008054610100900460ff1615620018815750600054610100900460ff1690565b6000600080516020620047be8339815191523b15620019865760408051600080516020620047be833981519152602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162001908917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001e12565b60408051601f1981840301815290829052620019249162001e38565b6000604051808303816000865af19150503d806000811462001963576040519150601f19603f3d011682016040523d82523d6000602084013e62001968565b606091505b509150508080602001905181019062001982919062001d35565b9150505b919050565b6004805460405163ca669fa760e01b81526001600160a01b0390911691810191909152600080516020620047be8339815191529063ca669fa790602401600060405180830381600087803b158015620019e357600080fd5b505af1158015620019f8573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001a4d57600080fd5b505af115801562001a62573d6000803e3d6000fd5b505060008054600480546040516365d4b0a560e11b81526001600160a01b039182169281019290925292945062010000909104909116915063cba9614a90602401602060405180830381865afa15801562001ac1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ae7919062001d59565b9050801562001afa5762001afa62001d73565b604080516390c5013b60e01b81529051600080516020620047be833981519152916390c5013b91600480830192600092919082900301818387803b15801562001b4257600080fd5b505af115801562001b57573d6000803e3d6000fd5b5050505050565b806200185d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001bc49060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200185d600080516020620047be8339815191523b1562001cc85760408051600080516020620047be833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262001c63929160200162001e12565b60408051601f198184030181529082905262001c7f9162001e38565b6000604051808303816000865af19150503d806000811462001cbe576040519150601f19603f3d011682016040523d82523d6000602084013e62001cc3565b606091505b505050505b6000805461ff001916610100179055565b61143e8062001e4783390190565b610b34806200328583390190565b610a058062003db983390190565b60006020828403121562001d1657600080fd5b81516001600160a01b038116811462001d2e57600080fd5b9392505050565b60006020828403121562001d4857600080fd5b8151801515811462001d2e57600080fd5b60006020828403121562001d6c57600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111562001db55762001db562001d89565b500190565b60008282101562001dcf5762001dcf62001d89565b500390565b6000815160005b8181101562001df7576020818501810151868301520162001ddb565b8181111562001e07576000828601525b509290920192915050565b6001600160e01b031983168152600062001e30600483018462001dd4565b949350505050565b600062001d2e828462001dd456fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6113c08061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80638da5cb5b11610097578063cbf9fe5f11610066578063cbf9fe5f14610333578063df681c1414610353578063f2fde38b14610373578063ffb4b1be1461038657600080fd5b80638da5cb5b146102c95780639c4e64e0146102e45780639c5bbc89146102f7578063cba9614a1461030a57600080fd5b8063379607f5116100d3578063379607f5146101dc578063673448dd146101ef578063715018a614610222578063854e96821461022a57600080fd5b8062f714ce146101045780630d53588314610119578063297611361461012c578063310934ca1461013f575b600080fd5b610117610112366004611059565b610399565b005b610117610127366004611093565b610587565b61011761013a366004611149565b6108a2565b6101c961014d3660046111fa565b33600090815260016020818152604080842094845293815291839020835160e08101855281548082529282015493810193909352600281015493830193909352600383015460608301526004830154608083015260059092015460ff8116151560a083015261010090046001600160a01b031660c09091015290565b6040519081526020015b60405180910390f35b6101176101ea3660046111fa565b610993565b6102126101fd366004611213565b60036020526000908152604090205460ff1681565b60405190151581526020016101d3565b610117610c18565b610289610238366004611235565b600160208181526000938452604080852090915291835291208054918101546002820154600383015460048401546005909401549293919290919060ff81169061010090046001600160a01b031687565b6040805197885260208801969096529486019390935260608501919091526080840152151560a08301526001600160a01b031660c082015260e0016101d3565b6000546040516001600160a01b0390911681526020016101d3565b6101c96102f236600461125f565b610c4e565b610117610305366004611213565b610c93565b6101c9610318366004611213565b6001600160a01b031660009081526002602052604090205490565b6101c9610341366004611213565b60046020526000908152604090205481565b6101c9610361366004611213565b60026020526000908152604090205481565b610117610381366004611213565b610ce1565b610117610394366004611235565b610d7c565b6000546001600160a01b031633146103cc5760405162461bcd60e51b81526004016103c390611291565b60405180910390fd5b6001600160a01b0381166000818152600460208190526040918290205491516370a0823160e01b8152309181019190915283928592916370a0823190602401602060405180830381865afa158015610428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044c91906112c6565b61045691906112f5565b10156104a45760405162461bcd60e51b815260206004820152601760248201527f56657374696e673a2043616e277420776974686472617700000000000000000060448201526064016103c3565b806001600160a01b031663a9059cbb6104c56000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018690526044016020604051808303816000875af1158015610512573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610536919061130c565b6105825760405162461bcd60e51b815260206004820152601860248201527f56657374696e673a207769746864726177206661696c6564000000000000000060448201526064016103c3565b505050565b6000546001600160a01b03163314806105af57503360009081526003602052604090205460ff165b6105cb5760405162461bcd60e51b81526004016103c390611291565b6000821180156105db5750828210155b80156105e75750600086115b6106335760405162461bcd60e51b815260206004820152601f60248201527f56657374696e673a20696e76616c69642076657374696e6720706172616d730060448201526064016103c3565b6001600160a01b0385166000908152600460205260409020546106568782611329565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa15801561069a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106be91906112c6565b101561070c5760405162461bcd60e51b815260206004820152601a60248201527f56657374696e673a204e6f7420656e6f75676820746f6b656e7300000000000060448201526064016103c3565b6001600160a01b038816600090815260026020908152604080832054815160e0810183528b8152928301939093528101849052606081016107508762093a80611341565b61075a9086611329565b815260200161076c8662093a80611341565b6107769086611329565b81528715156020808301919091526001600160a01b03808b166040938401528c811660009081526001808452848220878352845290849020855181559285015183820155928401516002830155606084015160038301556080840151600483015560a08401516005909201805460c09095015190911661010002610100600160a81b0319921515929092166001600160a81b03199094169390931717909155610820908290611329565b6001600160a01b038a166000908152600260205260409020556108438883611329565b6001600160a01b0380891660009081526004602090815260409182902093909355518a8152908b16917fd4a50953e9ae2104f507446be8391c79b33e1e86e626473e34bb79eb5fea1f3e910160405180910390a2505050505050505050565b6000546001600160a01b031633146108cc5760405162461bcd60e51b81526004016103c390611291565b8786811461091c5760405162461bcd60e51b815260206004820152601d60248201527f56657374696e673a204172726179206c656e677468732064696666657200000060448201526064016103c3565b60005b81811015610986576109748b8b8381811061093c5761093c611360565b90506020020160208101906109519190611213565b8a8a8481811061096357610963611360565b905060200201358989898989610587565b8061097e81611376565b91505061091f565b5050505050505050505050565b3360008181526001602090815260408083208584528252918290208054835194855291840191909152917f33ac953613b6ef91c4afa2b6adb073486ec4b038cbc7fb7be7ff98f5f261e77e910160405180910390a14281600301541115610a3c5760405162461bcd60e51b815260206004820152601a60248201527f56657374696e673a20636c696666206e6f74207265616368656400000000000060448201526064016103c3565b8054610a835760405162461bcd60e51b815260206004820152601660248201527556657374696e673a206e6f7420636c61696d61626c6560501b60448201526064016103c3565b6000610a9d82600001544284600201548560040154610c4e565b82549091508111610aae5780610ab1565b81545b90506000826001015482610ac591906112f5565b60018401839055600584015461010090046001600160a01b0316600090815260046020526040902054909150610afc9082906112f5565b6005840180546001600160a01b03610100918290048116600090815260046020819052604091829020959095559254925163a9059cbb60e01b81523394810194909452602484018590529104169063a9059cbb906044016020604051808303816000875af1158015610b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b96919061130c565b610bdd5760405162461bcd60e51b815260206004820152601860248201527715995cdd1a5b99ce881d1c985b9cd9995c8819985a5b195960421b60448201526064016103c3565b60405182815233907f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d49060200160405180910390a250505050565b6000546001600160a01b03163314610c425760405162461bcd60e51b81526004016103c390611291565b610c4c6000610fed565b565b600082841015610c6057506000610c8b565b610c6a83836112f5565b610c7484866112f5565b610c7e9087611341565b610c889190611391565b90505b949350505050565b6000546001600160a01b03163314610cbd5760405162461bcd60e51b81526004016103c390611291565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b6000546001600160a01b03163314610d0b5760405162461bcd60e51b81526004016103c390611291565b6001600160a01b038116610d705760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c3565b610d7981610fed565b50565b6000546001600160a01b03163314610da65760405162461bcd60e51b81526004016103c390611291565b6001600160a01b03821660009081526001602090815260408083208484529091529020600581015460ff1615610e1e5760405162461bcd60e51b815260206004820152601960248201527f56657374696e673a204163636f756e742069732066697865640000000000000060448201526064016103c3565b60018101548154600091610e31916112f5565b905080610e805760405162461bcd60e51b815260206004820152601e60248201527f56657374696e673a206e6f206f75747374616e64696e6720746f6b656e73000060448201526064016103c3565b6000808355600583015461010090046001600160a01b0316815260046020526040902054610eaf9082906112f5565b6005830180546001600160a01b036101009182900481166000908152600460205260409020939093559054041663a9059cbb610ef36000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610f40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f64919061130c565b610fab5760405162461bcd60e51b815260206004820152601860248201527715995cdd1a5b99ce881d1c985b9cd9995c8819985a5b195960421b60448201526064016103c3565b6040516001600160a01b03851681527f398bd6b21ae4164ec322fb0eb8c2eb6277f36fd41903fbbed594dfe1255912819060200160405180910390a150505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461105457600080fd5b919050565b6000806040838503121561106c57600080fd5b8235915061107c6020840161103d565b90509250929050565b8015158114610d7957600080fd5b600080600080600080600060e0888a0312156110ae57600080fd5b6110b78861103d565b9650602088013595506110cc6040890161103d565b945060608801356110dc81611085565b9699959850939660808101359560a0820135955060c0909101359350915050565b60008083601f84011261110f57600080fd5b50813567ffffffffffffffff81111561112757600080fd5b6020830191508360208260051b850101111561114257600080fd5b9250929050565b600080600080600080600080600060e08a8c03121561116757600080fd5b893567ffffffffffffffff8082111561117f57600080fd5b61118b8d838e016110fd565b909b50995060208c01359150808211156111a457600080fd5b506111b18c828d016110fd565b90985096506111c4905060408b0161103d565b945060608a01356111d481611085565b8094505060808a0135925060a08a0135915060c08a013590509295985092959850929598565b60006020828403121561120c57600080fd5b5035919050565b60006020828403121561122557600080fd5b61122e8261103d565b9392505050565b6000806040838503121561124857600080fd5b6112518361103d565b946020939093013593505050565b6000806000806080858703121561127557600080fd5b5050823594602084013594506040840135936060013592509050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156112d857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611307576113076112df565b500390565b60006020828403121561131e57600080fd5b815161122e81611085565b6000821982111561133c5761133c6112df565b500190565b600081600019048311821515161561135b5761135b6112df565b500290565b634e487b7160e01b600052603260045260246000fd5b600060001982141561138a5761138a6112df565b5060010190565b6000826113ae57634e487b7160e01b600052601260045260246000fd5b50049056fea164736f6c634300080b000a60806040523480156200001157600080fd5b5060405162000b3438038062000b34833981016040819052620000349162000248565b604051806040016040528060078152602001662ca5a9b1b7b4b760c91b81525060405180604001604052806003815260200162594b5360e81b815250816003908051906020019062000088929190620001a2565b5080516200009e906004906020840190620001a2565b505050620000b33382620000ba60201b60201c565b50620002c6565b6001600160a01b038216620001155760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000129919062000262565b90915550506001600160a01b038216600090815260208190526040812080548392906200015890849062000262565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001b09062000289565b90600052602060002090601f016020900481019282620001d457600085556200021f565b82601f10620001ef57805160ff19168380011785556200021f565b828001600101855582156200021f579182015b828111156200021f57825182559160200191906001019062000202565b506200022d92915062000231565b5090565b5b808211156200022d576000815560010162000232565b6000602082840312156200025b57600080fd5b5051919050565b600082198211156200028457634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200029e57607f821691505b60208210811415620002c057634e487b7160e01b600052602260045260246000fd5b50919050565b61085e80620002d66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea164736f6c634300080b000a608060405234801561001057600080fd5b50604051610a05380380610a0583398101604081905261002f91610081565b6001600081905580546001600160a01b039384166001600160a01b031991821617909155600380549290931691161790556100b4565b80516001600160a01b038116811461007c57600080fd5b919050565b6000806040838503121561009457600080fd5b61009d83610065565b91506100ab60208401610065565b90509250929050565b610942806100c36000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d1af0c7d1161005b578063d1af0c7d14610108578063dd1113b21461011b578063e4d75c9d14610123578063eacccaf01461015357600080fd5b80630700037d1461008d5780633d18b912146100c057806344c63eec146100ca578063af0fe497146100f5575b600080fd5b6100ad61009b36600461079a565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100c8610166565b005b6003546100dd906001600160a01b031681565b6040516001600160a01b0390911681526020016100b7565b6100c86101033660046107b5565b6102b6565b6001546100dd906001600160a01b031681565b6100c8610334565b6100c861013136600461079a565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6100c86101613660046107ce565b61043e565b600260005414156101be5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000818155338152602091909152604090205480156102ae5733600090815260026020526040812055600354600154610206916001600160a01b03918216911683610472565b6003805460018054604051630d53588360e01b81526001600160a01b0393841694630d5358839461024694339489949216929091600490429082016107f8565b600060405180830381600087803b15801561026057600080fd5b505af1158015610274573d6000803e3d6000fd5b50506040518381523392507fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486915060200160405180910390a25b506001600055565b600081116102c357600080fd5b336000908152600460205260409020546102dd90826104da565b336000818152600460205260408120929092556005805460018101825592527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090910180546001600160a01b031916909117905550565b60005b60055481101561043b5760006005828154811061035657610356610839565b60009182526020808320909101546001600160a01b031680835260029091526040909120549091508015610426576001600160a01b038083166000908152600260205260408120556003546001546103b392908116911683610472565b6003805460018054604051630d53588360e01b81526001600160a01b0393841694630d535883946103f394899489949216929091600490429082016107f8565b600060405180830381600087803b15801561040d57600080fd5b505af1158015610421573d6000803e3d6000fd5b505050505b5050808061043390610865565b915050610337565b50565b600154610456906001600160a01b03163330846104ed565b6001600160a01b03909116600090815260026020526040902055565b6040516001600160a01b0383166024820152604481018290526104d590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261052b565b505050565b60006104e68284610880565b9392505050565b6040516001600160a01b03808516602483015283166044820152606481018290526105259085906323b872dd60e01b9060840161049e565b50505050565b6000610580826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105fd9092919063ffffffff16565b8051909150156104d5578080602001905181019061059e9190610898565b6104d55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101b5565b606061060c8484600085610614565b949350505050565b6060824710156106755760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101b5565b6001600160a01b0385163b6106cc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101b5565b600080866001600160a01b031685876040516106e891906108e6565b60006040518083038185875af1925050503d8060008114610725576040519150601f19603f3d011682016040523d82523d6000602084013e61072a565b606091505b509150915061073a828286610745565b979650505050505050565b606083156107545750816104e6565b8251156107645782518084602001fd5b8160405162461bcd60e51b81526004016101b59190610902565b80356001600160a01b038116811461079557600080fd5b919050565b6000602082840312156107ac57600080fd5b6104e68261077e565b6000602082840312156107c757600080fd5b5035919050565b600080604083850312156107e157600080fd5b6107ea8361077e565b946020939093013593505050565b6001600160a01b03978816815260208101969096529390951660408501529015156060840152608083015260a082019290925260c081019190915260e00190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156108795761087961084f565b5060010190565b600082198211156108935761089361084f565b500190565b6000602082840312156108aa57600080fd5b815180151581146104e657600080fd5b60005b838110156108d55781810151838201526020016108bd565b838111156105255750506000910152565b600082516108f88184602087016108ba565b9190910192915050565b60208152600082518060208401526109218160408501602087016108ba565b601f01601f1916919091016040019291505056fea164736f6c634300080b000a0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d2cab9790510fd8bdfbd2115288db33fec66691d476efc5427cfd4c0969301755a164736f6c634300080b000a",
    "sourceMap": "170:2576:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;429:495;;;:::i;:::-;;930:63;;;:::i;214:22::-;;;;;;;;-1:-1:-1;;;;;214:22:14;;;;;;-1:-1:-1;;;;;194:32:16;;;176:51;;164:2;149:18;214:22:14;;;;;;;;1641:605;;;:::i;270:40::-;;;;;-1:-1:-1;;;;;270:40:14;;;342:20;;;;;-1:-1:-1;;;;;342:20:14;;;1222:413;;;:::i;2252:490::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;846:14:16;;839:22;821:41;;809:2;794:18;1819:584:0;681:187:16;999:216:14;;;:::i;316:20::-;;;;;-1:-1:-1;;;;;316:20:14;;;1572:26:0;;;;;;;;;242:22:14;;;;;-1:-1:-1;;;;;242:22:14;;;429:495;473:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;463:7;;:23;;;;;-1:-1:-1;;;;;463:23:14;;;;;-1:-1:-1;;;;;463:23:14;;;;;;518:6;504:21;;;;;:::i;:::-;1258:25:16;;;1246:2;1231:18;504:21:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;496:5:14;:29;;-1:-1:-1;;;;;;496:29:14;-1:-1:-1;;;;;496:29:14;;;;;;;;;;543:14;;-1:-1:-1;;;;;;543:14:14;;;;;1258:25:16;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;543:11:14;;1231:18:16;;543:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;535:5;:22;;-1:-1:-1;;;;;;535:22:14;-1:-1:-1;;;;;535:22:14;;;;;;;;;;575:14;;-1:-1:-1;;;;;;575:14:14;;587:1;575:14;;;1258:25:16;-1:-1:-1;;;;;;;;;;;1671:64:0;575:11:14;;1231:18:16;;575:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;567:5;:22;;-1:-1:-1;;;;;;567:22:14;-1:-1:-1;;;;;567:22:14;;;;;;-1:-1:-1;647:5:14;-1:-1:-1;662:7:14;616:55;;647:5;;;;662:7;;;;;;616:55;;;:::i;:::-;-1:-1:-1;;;;;2199:15:16;;;2181:34;;2251:15;;2246:2;2231:18;;2224:43;2131:2;2116:18;616:55:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;599:14:14;:72;;-1:-1:-1;;;;;;599:72:14;-1:-1:-1;;;;;599:72:14;;;;;;;;;-1:-1:-1;681:7:14;:51;;-1:-1:-1;;;681:51:14;;;;;176::16;;;;681:7:14;;;;;;;:26;;149:18:16;;681:51:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;742:5:14;;764:14;;742:54;;-1:-1:-1;;;742:54:14;;-1:-1:-1;;;;;764:14:14;;;742:54;;;2474:51:16;780:15:14;2541:18:16;;;2534:34;742:5:14;;;-1:-1:-1;742:13:14;;-1:-1:-1;2447:18:16;;742:54:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;806:14:14;;839:5;;806:46;;-1:-1:-1;;;806:46:14;;-1:-1:-1;;;;;839:5:14;;;806:46;;;2474:51:16;847:4:14;2541:18:16;;;2534:34;806:14:14;;;:24;;2447:18:16;;806:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;862:14:14;;887;;-1:-1:-1;;;;;;887:14:14;;899:1;887:14;;;1258:25:16;-1:-1:-1;;;;;862:14:14;;;;-1:-1:-1;862:24:14;;-1:-1:-1;;;;;;;;;;;;1671:64:0;887:11:14;;1231:18:16;;887:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;862:46;;-1:-1:-1;;;;;;862:46:14;;;;;;;-1:-1:-1;;;;;2492:32:16;;;862:46:14;;;2474:51:16;903:4:14;2541:18:16;;;2534:34;2447:18;;862:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;429:495::o;930:63::-;970:16;981:4;970:10;:16::i;:::-;930:63::o;1641:605::-;1697:14;;-1:-1:-1;;;;;;1697:14:14;;1709:1;1697:14;;;1258:25:16;-1:-1:-1;;;;;;;;;;;1671:64:0;1684:12:14;;1671:64:0;;1697:11:14;;1231:18:16;;1697:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1684:28;;-1:-1:-1;;;;;;1684:28:14;;;;;;;-1:-1:-1;;;;;194:32:16;;;1684:28:14;;;176:51:16;149:18;;1684:28:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1722:14:14;;:30;;-1:-1:-1;;;1722:30:14;;1747:4;1722:30;;;1258:25:16;-1:-1:-1;;;;;1722:14:14;;;;-1:-1:-1;1722:24:14;;-1:-1:-1;1231:18:16;;1722:30:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1775:14:14;;-1:-1:-1;;;;;;1775:14:14;;1787:1;1775:14;;;1258:25:16;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1762:12:14;;-1:-1:-1;1671:64:0;;1775:11:14;;1231:18:16;;1775:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1762:28;;-1:-1:-1;;;;;;1762:28:14;;;;;;;-1:-1:-1;;;;;194:32:16;;;1762:28:14;;;176:51:16;149:18;;1762:28:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1800:14;;;;;;;;;-1:-1:-1;;;;;1800:14:14;-1:-1:-1;;;;;1800:24:14;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1836:9:14;1848:7;;1874:14;;-1:-1:-1;;;;;;1874:14:14;;1886:1;1874:14;;;1258:25:16;1836:9:14;;-1:-1:-1;1848:7:14;;;-1:-1:-1;;;;;1848:7:14;;-1:-1:-1;1848:25:14;;-1:-1:-1;;;;;;;;;;;1671:64:0;1874:11:14;;1231:18:16;;1874:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1848:41;;-1:-1:-1;;;;;;1848:41:14;;;;;;;-1:-1:-1;;;;;194:32:16;;;1848:41:14;;;176:51:16;149:18;;1848:41:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1836:53;;-1:-1:-1;;;;;;;;;;;1913:1:14;1904:11;;;;1258:25:16;;1246:2;1231:18;;1099:190;1904:11:14;;;;;;;;1936:1;1932;:5;1925:13;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1948:11:14;1960:25;:15;1978:7;1960:25;:::i;:::-;1948:38;;;;;;;;;;;;;1258:25:16;;1246:2;1231:18;;1099:190;1948:38:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1996:9:14;2008:7;;1996:9;;-1:-1:-1;2008:7:14;;;-1:-1:-1;;;;;2008:7:14;;-1:-1:-1;2008:30:14;2039:3;2041:1;2039;:3;:::i;:::-;2008:35;;;;;;;;;;;;;1258:25:16;;1246:2;1231:18;;1099:190;2008:35:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1996:47;;-1:-1:-1;;;;;;;;;;;2067:1:14;2058:11;;;;1258:25:16;;1246:2;1231:18;;1099:190;2058:11:14;;;;;;;;2086:5;;2102:14;;-1:-1:-1;;;;;;2102:14:14;;2114:1;2102:14;;;1258:25:16;-1:-1:-1;;;;;2086:5:14;;;;:15;;-1:-1:-1;;;;;;;;;;;1671:64:0;2102:11:14;;1231:18:16;;2102:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2086:31;;-1:-1:-1;;;;;;2086:31:14;;;;;;;-1:-1:-1;;;;;194:32:16;;;2086:31:14;;;176:51:16;149:18;;2086:31:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;2079:42;;;;:::i;:::-;2144:14;;-1:-1:-1;;;;;;2144:14:14;;2156:1;2144:14;;;1258:25:16;-1:-1:-1;;;;;;;;;;;1671:64:0;2131:12:14;;1671:64:0;;2144:11:14;;1231:18:16;;2144:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2131:28;;-1:-1:-1;;;;;;2131:28:14;;;;;;;-1:-1:-1;;;;;194:32:16;;;2131:28:14;;;176:51:16;149:18;;2131:28:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2169:7:14;;;;;-1:-1:-1;;;;;2169:7:14;;-1:-1:-1;2169:13:14;;-1:-1:-1;2183:3:14;2185:1;2183;:3;:::i;:::-;2169:18;;;;;;;;;;;;;1258:25:16;;1246:2;1231:18;;1099:190;2169:18:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2204:5:14;;2220:14;;-1:-1:-1;;;;;;2220:14:14;;2232:1;2220:14;;;1258:25:16;2236:1:14;;-1:-1:-1;;;;;;2204:5:14;;;;-1:-1:-1;2204:15:14;;-1:-1:-1;;;;;;;;;;;1671:64:0;2220:11:14;;1231:18:16;;2220:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2204:31;;-1:-1:-1;;;;;;2204:31:14;;;;;;;-1:-1:-1;;;;;194:32:16;;;2204:31:14;;;176:51:16;149:18;;2204:31:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;2197:41;;;;:::i;:::-;1674:572;;1641:605::o;1222:413::-;1281:5;;1268:19;;-1:-1:-1;;;1268:19:14;;-1:-1:-1;;;;;1281:5:14;;;1268:19;;;176:51:16;-1:-1:-1;;;;;;;;;;;1671:64:0;1268:12:14;;149:18:16;;1268:19:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1297:14;;;;;;;;;-1:-1:-1;;;;;1297:14:14;-1:-1:-1;;;;;1297:24:14;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1347:5:14;;;1371:7;1347:33;;-1:-1:-1;;;1347:33:14;;-1:-1:-1;;;;;1371:7:14;;;;;;1347:33;;;176:51:16;-1:-1:-1;;;;;;;;;;;1338:43:14;-1:-1:-1;1347:5:14;;;-1:-1:-1;1347:15:14;;149:18:16;;1347:33:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1338:43;;1258:25:16;;;1246:2;1231:18;1338:43:14;;;;;;;1391:9;1403:7;;1429:5;;1403:32;;-1:-1:-1;;;1403:32:14;;-1:-1:-1;;;;;1429:5:14;;;1403:32;;;176:51:16;1403:7:14;;;;;;:25;;149:18:16;;1403:32:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1391:44;;1456:1;1452;:5;1445:13;;;;:::i;:::-;1473:11;;1258:25:16;;;-1:-1:-1;;;;;;;;;;;1473:11:14;1246:2:16;1231:18;1473:11:14;;;;;;;1494:9;1506:7;;;;;-1:-1:-1;;;;;1506:7:14;:30;1537:3;1539:1;1537;:3;:::i;:::-;1506:35;;;;;;;;;;;;;1258:25:16;;1246:2;1231:18;;1099:190;1506:35:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1494:47;;-1:-1:-1;;;;;;;;;;;1565:1:14;1556:11;;;;1258:25:16;;1246:2;1231:18;;1099:190;1556:11:14;;;;;;;;1594:5;;1582:18;;-1:-1:-1;;;;;1594:5:14;;;176:51:16;;1582:18:14;;164:2:16;149:18;1582::14;;;;;;;1610;;;-1:-1:-1;;;1610:18:14;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;1610:16:14;;:18;;;;;1695:37:0;;1610:18:14;;;;;;;1695:37:0;1671:64;1610:18:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1258:377;;1222:413::o;2252:490::-;2293:14;;2318;;-1:-1:-1;;;;;;2318:14:14;;2330:1;2318:14;;;1258:25:16;-1:-1:-1;;;;;2293:14:14;;;;:24;;-1:-1:-1;;;;;;;;;;;1671:64:0;2318:11:14;;1231:18:16;;2318:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2293:46;;-1:-1:-1;;;;;;2293:46:14;;;;;;;-1:-1:-1;;;;;2492:32:16;;;2293:46:14;;;2474:51:16;2334:4:14;2541:18:16;;;2534:34;2447:18;;2293:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2349:14:14;;2374;;-1:-1:-1;;;;;;2374:14:14;;2386:1;2374:14;;;1258:25:16;-1:-1:-1;;;;;2349:14:14;;;;-1:-1:-1;2349:24:14;;-1:-1:-1;;;;;;;;;;;;1671:64:0;2374:11:14;;1231:18:16;;2374:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2349:46;;-1:-1:-1;;;;;;2349:46:14;;;;;;;-1:-1:-1;;;;;2492:32:16;;;2349:46:14;;;2474:51:16;2390:4:14;2541:18:16;;;2534:34;2447:18;;2349:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2418:14:14;;-1:-1:-1;;;;;;2418:14:14;;2430:1;2418:14;;;1258:25:16;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;2405:12:14;;-1:-1:-1;1671:64:0;;2418:11:14;;1231:18:16;;2418:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2405:28;;-1:-1:-1;;;;;;2405:28:14;;;;;;;-1:-1:-1;;;;;194:32:16;;;2405:28:14;;;176:51:16;149:18;;2405:28:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2443:14:14;;:30;;-1:-1:-1;;;2443:30:14;;2468:4;2443:30;;;1258:25:16;-1:-1:-1;;;;;2443:14:14;;;;-1:-1:-1;2443:24:14;;-1:-1:-1;1231:18:16;;2443:30:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2496:14:14;;-1:-1:-1;;;;;;2496:14:14;;2508:1;2496:14;;;1258:25:16;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;2483:12:14;;-1:-1:-1;1671:64:0;;2496:11:14;;1231:18:16;;2496:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2483:28;;-1:-1:-1;;;;;;2483:28:14;;;;;;;-1:-1:-1;;;;;194:32:16;;;2483:28:14;;;176:51:16;149:18;;2483:28:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2521:14:14;;:30;;-1:-1:-1;;;2521:30:14;;2546:4;2521:30;;;1258:25:16;-1:-1:-1;;;;;2521:14:14;;;;-1:-1:-1;2521:24:14;;-1:-1:-1;1231:18:16;;2521:30:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2561:18:14;;;-1:-1:-1;;;2561:18:14;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;2561:16:14;;-1:-1:-1;2561:18:14;;;;;1695:37:0;;2561:18:14;;;;;;;1695:37:0;1671:64;2561:18:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2589:14;;;;;;;;;-1:-1:-1;;;;;2589:14:14;-1:-1:-1;;;;;2589:31:14;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2632:9:14;2644:7;;2670:14;;-1:-1:-1;;;;;;2670:14:14;;2682:1;2670:14;;;1258:25:16;2632:9:14;;-1:-1:-1;2644:7:14;;;-1:-1:-1;;;;;2644:7:14;;-1:-1:-1;2644:25:14;;-1:-1:-1;;;;;;;;;;;1671:64:0;2670:11:14;;1231:18:16;;2670:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2644:41;;-1:-1:-1;;;;;;2644:41:14;;;;;;;-1:-1:-1;;;;;194:32:16;;;2644:41:14;;;176:51:16;149:18;;2644:41:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2632:53;;2706:1;2702;:5;2695:13;;;;:::i;:::-;2283:459;2252:490::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:0;;;2474:51:16;;;-1:-1:-1;;;2541:18:16;;;2534:34;2196:43:0;;;;;;;;;2447:18:16;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;999:216:14:-;1060:5;;;1047:19;;-1:-1:-1;;;1047:19:14;;-1:-1:-1;;;;;1060:5:14;;;1047:19;;;176:51:16;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;1047:12:14;;149:18:16;;1047:19:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1076:14;;;;;;;;;-1:-1:-1;;;;;1076:14:14;-1:-1:-1;;;;;1076:24:14;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1112:9:14;1124:7;;1150:5;;;1124:32;;-1:-1:-1;;;1124:32:14;;-1:-1:-1;;;;;1150:5:14;;;1124:32;;;176:51:16;;;;1112:9:14;;-1:-1:-1;1124:7:14;;;;;;;;-1:-1:-1;1124:25:14;;149:18:16;;1124:32:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1112:44;-1:-1:-1;1173:6:14;;1166:14;;;;:::i;:::-;1190:18;;;-1:-1:-1;;;1190:18:14;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;1190:16:14;;:18;;;;;1695:37:0;;1190:18:14;;;;;;;1695:37:0;1671:64;1190:18:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1037:178;999:216::o;3255:157:0:-;3315:9;3310:96;;3345:30;;;;;6111:2:16;6093:21;;;6150:2;6130:18;;;6123:30;6189:25;6184:2;6169:18;;6162:53;6247:2;6232:18;;5909:347;3345:30:0;;;;;;;;3389:6;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;2445:359;;2645:67;;;-1:-1:-1;;;;;;;;;;;2645:67:0;;;6463:51:16;;;-1:-1:-1;;;6530:18:16;;;6523:34;;;;2705:4:0;6573:18:16;;;6566:34;2482:11:0;;1671:64;2579:43;;6436:18:16;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;1484:290:16:-;1554:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:52;;;1623:1;1620;1613:12;1575:52;1649:16;;-1:-1:-1;;;;;1694:31:16;;1684:42;;1674:70;;1740:1;1737;1730:12;1674:70;1763:5;1484:290;-1:-1:-1;;;1484:290:16:o;2579:277::-;2646:6;2699:2;2687:9;2678:7;2674:23;2670:32;2667:52;;;2715:1;2712;2705:12;2667:52;2747:9;2741:16;2800:5;2793:13;2786:21;2779:5;2776:32;2766:60;;2822:1;2819;2812:12;3534:184;3604:6;3657:2;3645:9;3636:7;3632:23;3628:32;3625:52;;;3673:1;3670;3663:12;3625:52;-1:-1:-1;3696:16:16;;3534:184;-1:-1:-1;3534:184:16:o;3905:127::-;3966:10;3961:3;3957:20;3954:1;3947:31;3997:4;3994:1;3987:15;4021:4;4018:1;4011:15;4037:127;4098:10;4093:3;4089:20;4086:1;4079:31;4129:4;4126:1;4119:15;4153:4;4150:1;4143:15;4169:128;4209:3;4240:1;4236:6;4233:1;4230:13;4227:39;;;4246:18;;:::i;:::-;-1:-1:-1;4282:9:16;;4169:128::o;4302:125::-;4342:4;4370:1;4367;4364:8;4361:34;;;4375:18;;:::i;:::-;-1:-1:-1;4412:9:16;;4302:125::o;5091:336::-;5132:3;5170:5;5164:12;5194:1;5204:128;5218:6;5215:1;5212:13;5204:128;;;5315:4;5300:13;;;5296:24;;5290:31;5277:11;;;5270:52;5233:12;5204:128;;;5350:6;5347:1;5344:13;5341:48;;;5385:1;5376:6;5371:3;5367:16;5360:27;5341:48;-1:-1:-1;5405:16:16;;;;;5091:336;-1:-1:-1;;5091:336:16:o;5432:278::-;-1:-1:-1;;;;;;5617:33:16;;5605:46;;5587:3;5667:37;5701:1;5692:11;;5684:6;5667:37;:::i;:::-;5660:44;5432:278;-1:-1:-1;;;;5432:278:16:o;5715:189::-;5844:3;5869:29;5894:3;5886:6;5869:29;:::i",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/saadman/Desktop/vesting-contracts/src/test/StakingRewardsVesting.t.sol",
    "exportedSymbols": {
      "Address": [
        3139
      ],
      "Cheats": [
        4839
      ],
      "Context": [
        3161
      ],
      "DSTest": [
        1786
      ],
      "ERC20": [
        2517
      ],
      "IERC20": [
        2595
      ],
      "IERC20Metadata": [
        2620
      ],
      "IVesting": [
        3512
      ],
      "MockERC20": [
        3534
      ],
      "MockStakingRewards": [
        3788
      ],
      "Ownable": [
        1891
      ],
      "ReentrancyGuard": [
        1931
      ],
      "SafeERC20": [
        2844
      ],
      "SafeMath": [
        3473
      ],
      "StakingRewardsTest": [
        4778
      ],
      "Vesting": [
        4361
      ]
    },
    "id": 4779,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4363,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "/Users/saadman/Desktop/vesting-contracts/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "id": 4364,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4779,
        "sourceUnit": 1787,
        "src": "25:26:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/saadman/Desktop/vesting-contracts/src/Vesting.sol",
        "file": "../Vesting.sol",
        "id": 4365,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4779,
        "sourceUnit": 4362,
        "src": "52:24:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/saadman/Desktop/vesting-contracts/src/MockERC20.sol",
        "file": "../MockERC20.sol",
        "id": 4366,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4779,
        "sourceUnit": 3535,
        "src": "77:26:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/saadman/Desktop/vesting-contracts/src/test/utils/Cheats.sol",
        "file": "./utils/Cheats.sol",
        "id": 4367,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4779,
        "sourceUnit": 4840,
        "src": "104:28:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/saadman/Desktop/vesting-contracts/src/MockStakingRewards.sol",
        "file": "../MockStakingRewards.sol",
        "id": 4368,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4779,
        "sourceUnit": 3789,
        "src": "133:35:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4369,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1786,
              "src": "201:6:14"
            },
            "id": 4370,
            "nodeType": "InheritanceSpecifier",
            "src": "201:6:14"
          }
        ],
        "canonicalName": "StakingRewardsTest",
        "contractDependencies": [
          3534,
          3788,
          4361
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4778,
        "linearizedBaseContracts": [
          4778,
          1786
        ],
        "name": "StakingRewardsTest",
        "nameLocation": "179:18:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "44c63eec",
            "id": 4373,
            "mutability": "mutable",
            "name": "vesting",
            "nameLocation": "229:7:14",
            "nodeType": "VariableDeclaration",
            "scope": 4778,
            "src": "214:22:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vesting_$4361",
              "typeString": "contract Vesting"
            },
            "typeName": {
              "id": 4372,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4371,
                "name": "Vesting",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4361,
                "src": "214:7:14"
              },
              "referencedDeclaration": 4361,
              "src": "214:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vesting_$4361",
                "typeString": "contract Vesting"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 4376,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "259:5:14",
            "nodeType": "VariableDeclaration",
            "scope": 4778,
            "src": "242:22:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$3534",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 4375,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4374,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3534,
                "src": "242:9:14"
              },
              "referencedDeclaration": 3534,
              "src": "242:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$3534",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "798b5c8a",
            "id": 4379,
            "mutability": "mutable",
            "name": "StakingRewards",
            "nameLocation": "296:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 4778,
            "src": "270:40:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
              "typeString": "contract MockStakingRewards"
            },
            "typeName": {
              "id": 4378,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4377,
                "name": "MockStakingRewards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3788,
                "src": "270:18:14"
              },
              "referencedDeclaration": 3788,
              "src": "270:18:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                "typeString": "contract MockStakingRewards"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eabe09ad",
            "id": 4381,
            "mutability": "mutable",
            "name": "addr1",
            "nameLocation": "331:5:14",
            "nodeType": "VariableDeclaration",
            "scope": 4778,
            "src": "316:20:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4380,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "316:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8de38f98",
            "id": 4383,
            "mutability": "mutable",
            "name": "addr2",
            "nameLocation": "357:5:14",
            "nodeType": "VariableDeclaration",
            "scope": 4778,
            "src": "342:20:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4382,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "342:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 4389,
            "mutability": "constant",
            "name": "cheats",
            "nameLocation": "393:6:14",
            "nodeType": "VariableDeclaration",
            "scope": 4778,
            "src": "368:54:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Cheats_$4839",
              "typeString": "contract Cheats"
            },
            "typeName": {
              "id": 4385,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4384,
                "name": "Cheats",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4839,
                "src": "368:6:14"
              },
              "referencedDeclaration": 4839,
              "src": "368:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Cheats_$4839",
                "typeString": "contract Cheats"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 4387,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 107,
                  "src": "409:12:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 4386,
                "name": "Cheats",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4839,
                "src": "402:6:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Cheats_$4839_$",
                  "typeString": "type(contract Cheats)"
                }
              },
              "id": 4388,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "402:20:14",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Cheats_$4839",
                "typeString": "contract Cheats"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4475,
              "nodeType": "Block",
              "src": "453:471:14",
              "statements": [
                {
                  "expression": {
                    "id": 4397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4392,
                      "name": "vesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4373,
                      "src": "463:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vesting_$4361",
                        "typeString": "contract Vesting"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "473:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Vesting_$4361_$",
                          "typeString": "function () returns (contract Vesting)"
                        },
                        "typeName": {
                          "id": 4394,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4393,
                            "name": "Vesting",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4361,
                            "src": "477:7:14"
                          },
                          "referencedDeclaration": 4361,
                          "src": "477:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vesting_$4361",
                            "typeString": "contract Vesting"
                          }
                        }
                      },
                      "id": 4396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "473:13:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vesting_$4361",
                        "typeString": "contract Vesting"
                      }
                    },
                    "src": "463:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vesting_$4361",
                      "typeString": "contract Vesting"
                    }
                  },
                  "id": 4398,
                  "nodeType": "ExpressionStatement",
                  "src": "463:23:14"
                },
                {
                  "expression": {
                    "id": 4405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4399,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4376,
                      "src": "496:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$3534",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "313030303030",
                          "id": 4403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "518:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          }
                        ],
                        "id": 4402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "504:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_MockERC20_$3534_$",
                          "typeString": "function (uint256) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 4401,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4400,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3534,
                            "src": "508:9:14"
                          },
                          "referencedDeclaration": 3534,
                          "src": "508:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$3534",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 4404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "504:21:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$3534",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "496:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$3534",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 4406,
                  "nodeType": "ExpressionStatement",
                  "src": "496:29:14"
                },
                {
                  "expression": {
                    "id": 4412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4407,
                      "name": "addr1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4381,
                      "src": "535:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 4410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "555:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 4408,
                          "name": "cheats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4389,
                          "src": "543:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Cheats_$4839",
                            "typeString": "contract Cheats"
                          }
                        },
                        "id": 4409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4787,
                        "src": "543:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) external returns (address)"
                        }
                      },
                      "id": 4411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "543:14:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "535:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4413,
                  "nodeType": "ExpressionStatement",
                  "src": "535:22:14"
                },
                {
                  "expression": {
                    "id": 4419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4414,
                      "name": "addr2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4383,
                      "src": "567:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 4417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "587:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "id": 4415,
                          "name": "cheats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4389,
                          "src": "575:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Cheats_$4839",
                            "typeString": "contract Cheats"
                          }
                        },
                        "id": 4416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4787,
                        "src": "575:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) external returns (address)"
                        }
                      },
                      "id": 4418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "575:14:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "567:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4420,
                  "nodeType": "ExpressionStatement",
                  "src": "567:22:14"
                },
                {
                  "expression": {
                    "id": 4434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4421,
                      "name": "StakingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4379,
                      "src": "599:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                        "typeString": "contract MockStakingRewards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 4427,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4376,
                              "src": "647:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$3534",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$3534",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 4426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "639:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4425,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "639:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "639:14:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 4431,
                              "name": "vesting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4373,
                              "src": "662:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vesting_$4361",
                                "typeString": "contract Vesting"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Vesting_$4361",
                                "typeString": "contract Vesting"
                              }
                            ],
                            "id": 4430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "654:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4429,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "654:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "654:16:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "616:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_MockStakingRewards_$3788_$",
                          "typeString": "function (address,address) returns (contract MockStakingRewards)"
                        },
                        "typeName": {
                          "id": 4423,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4422,
                            "name": "MockStakingRewards",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3788,
                            "src": "620:18:14"
                          },
                          "referencedDeclaration": 3788,
                          "src": "620:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                            "typeString": "contract MockStakingRewards"
                          }
                        }
                      },
                      "id": 4433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "616:55:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                        "typeString": "contract MockStakingRewards"
                      }
                    },
                    "src": "599:72:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                      "typeString": "contract MockStakingRewards"
                    }
                  },
                  "id": 4435,
                  "nodeType": "ExpressionStatement",
                  "src": "599:72:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4441,
                            "name": "StakingRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4379,
                            "src": "716:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                              "typeString": "contract MockStakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                              "typeString": "contract MockStakingRewards"
                            }
                          ],
                          "id": 4440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "708:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4439,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "708:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "708:23:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4436,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4373,
                        "src": "681:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$4361",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3902,
                      "src": "681:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "681:51:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4444,
                  "nodeType": "ExpressionStatement",
                  "src": "681:51:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4450,
                            "name": "StakingRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4379,
                            "src": "764:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                              "typeString": "contract MockStakingRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                              "typeString": "contract MockStakingRewards"
                            }
                          ],
                          "id": 4449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "756:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4448,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "756:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "756:23:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030303030303030303030303030",
                        "id": 4452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "780:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000_by_1",
                          "typeString": "int_const 100000000000000"
                        },
                        "value": "100000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000_by_1",
                          "typeString": "int_const 100000000000000"
                        }
                      ],
                      "expression": {
                        "id": 4445,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4376,
                        "src": "742:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$3534",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 4447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2098,
                      "src": "742:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "742:54:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4454,
                  "nodeType": "ExpressionStatement",
                  "src": "742:54:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4460,
                            "name": "addr1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4381,
                            "src": "839:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "831:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4458,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "831:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "831:14:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 4462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "847:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 4455,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "806:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3625,
                      "src": "806:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "806:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4464,
                  "nodeType": "ExpressionStatement",
                  "src": "806:46:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 4470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "899:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 4468,
                            "name": "cheats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4389,
                            "src": "887:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cheats_$4839",
                              "typeString": "contract Cheats"
                            }
                          },
                          "id": 4469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4787,
                          "src": "887:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) external returns (address)"
                          }
                        },
                        "id": 4471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "887:14:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 4472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "903:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 4465,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "862:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3625,
                      "src": "862:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4474,
                  "nodeType": "ExpressionStatement",
                  "src": "862:46:14"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 4476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "438:5:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "443:2:14"
            },
            "returnParameters": {
              "id": 4391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "453:0:14"
            },
            "scope": 4778,
            "src": "429:495:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4483,
              "nodeType": "Block",
              "src": "960:33:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 4480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "981:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4479,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "970:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 4481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "970:16:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4482,
                  "nodeType": "ExpressionStatement",
                  "src": "970:16:14"
                }
              ]
            },
            "functionSelector": "3f5a4a2a",
            "id": 4484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExample",
            "nameLocation": "939:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "950:2:14"
            },
            "returnParameters": {
              "id": 4478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "960:0:14"
            },
            "scope": 4778,
            "src": "930:63:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4516,
              "nodeType": "Block",
              "src": "1037:178:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4490,
                        "name": "addr2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4383,
                        "src": "1060:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4487,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4389,
                        "src": "1047:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4839",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4835,
                      "src": "1047:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1047:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4492,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:19:14"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4493,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "1076:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3715,
                      "src": "1076:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1076:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4497,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:26:14"
                },
                {
                  "assignments": [
                    4499
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4499,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "1120:1:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4516,
                      "src": "1112:9:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4498,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1112:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4504,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4502,
                        "name": "addr2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4383,
                        "src": "1150:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4500,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4373,
                        "src": "1124:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$4361",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNumOfSchedules",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3867,
                      "src": "1124:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1124:32:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1112:44:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4506,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4499,
                          "src": "1173:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1178:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1173:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4505,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1166:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1166:14:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4510,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:14:14"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4511,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4389,
                        "src": "1190:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4839",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4838,
                      "src": "1190:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1190:18:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4515,
                  "nodeType": "ExpressionStatement",
                  "src": "1190:18:14"
                }
              ]
            },
            "functionSelector": "e7423eb8",
            "id": 4517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSpoofRewardsClaim",
            "nameLocation": "1008:21:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1029:2:14"
            },
            "returnParameters": {
              "id": 4486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:14"
            },
            "scope": 4778,
            "src": "999:216:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4580,
              "nodeType": "Block",
              "src": "1258:377:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4523,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4381,
                        "src": "1281:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4520,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4389,
                        "src": "1268:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4839",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4835,
                      "src": "1268:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4525,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:19:14"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4526,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "1297:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3715,
                      "src": "1297:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1297:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4530,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:26:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4536,
                                "name": "vesting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4373,
                                "src": "1371:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vesting_$4361",
                                  "typeString": "contract Vesting"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Vesting_$4361",
                                  "typeString": "contract Vesting"
                                }
                              ],
                              "id": 4535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1363:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4534,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1363:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1363:16:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4532,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4376,
                            "src": "1347:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$3534",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 4533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2030,
                          "src": "1347:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1347:33:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4531,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1338:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1338:43:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4540,
                  "nodeType": "EmitStatement",
                  "src": "1333:48:14"
                },
                {
                  "assignments": [
                    4542
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4542,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "1399:1:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4580,
                      "src": "1391:9:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4541,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1391:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4547,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4545,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4381,
                        "src": "1429:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4543,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4373,
                        "src": "1403:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$4361",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNumOfSchedules",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3867,
                      "src": "1403:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:32:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1391:44:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4549,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4542,
                          "src": "1452:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1456:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1452:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4548,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1445:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1445:13:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4553,
                  "nodeType": "ExpressionStatement",
                  "src": "1445:13:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4555,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4542,
                        "src": "1482:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4554,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1473:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1473:11:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4557,
                  "nodeType": "EmitStatement",
                  "src": "1468:16:14"
                },
                {
                  "assignments": [
                    4559
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4559,
                      "mutability": "mutable",
                      "name": "y",
                      "nameLocation": "1502:1:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4580,
                      "src": "1494:9:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4558,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1494:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4566,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4562,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4542,
                          "src": "1537:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 4563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1539:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1537:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4560,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4373,
                        "src": "1506:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$4361",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getScheduleTotalAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3888,
                      "src": "1506:30:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1506:35:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1494:47:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4568,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4559,
                        "src": "1565:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4567,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1556:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1556:11:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4570,
                  "nodeType": "EmitStatement",
                  "src": "1551:16:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4572,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4381,
                        "src": "1594:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4571,
                      "name": "log_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1582:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1582:18:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4574,
                  "nodeType": "EmitStatement",
                  "src": "1577:23:14"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4575,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4389,
                        "src": "1610:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4839",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4838,
                      "src": "1610:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1610:18:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4579,
                  "nodeType": "ExpressionStatement",
                  "src": "1610:18:14"
                }
              ]
            },
            "functionSelector": "98872f16",
            "id": 4581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testVestingSchedule",
            "nameLocation": "1231:19:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1250:2:14"
            },
            "returnParameters": {
              "id": 4519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1258:0:14"
            },
            "scope": 4778,
            "src": "1222:413:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4696,
              "nodeType": "Block",
              "src": "1674:572:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 4589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1709:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 4587,
                            "name": "cheats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4389,
                            "src": "1697:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cheats_$4839",
                              "typeString": "contract Cheats"
                            }
                          },
                          "id": 4588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4787,
                          "src": "1697:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) external returns (address)"
                          }
                        },
                        "id": 4590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1697:14:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4584,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4389,
                        "src": "1684:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4839",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4835,
                      "src": "1684:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1684:28:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4592,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:28:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 4596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1747:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 4593,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "1722:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mockStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3657,
                      "src": "1722:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1722:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4598,
                  "nodeType": "ExpressionStatement",
                  "src": "1722:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 4604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1787:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 4602,
                            "name": "cheats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4389,
                            "src": "1775:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cheats_$4839",
                              "typeString": "contract Cheats"
                            }
                          },
                          "id": 4603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4787,
                          "src": "1775:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) external returns (address)"
                          }
                        },
                        "id": 4605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1775:14:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4599,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4389,
                        "src": "1762:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4839",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4835,
                      "src": "1762:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1762:28:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4607,
                  "nodeType": "ExpressionStatement",
                  "src": "1762:28:14"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4608,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "1800:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3715,
                      "src": "1800:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1800:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4612,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:26:14"
                },
                {
                  "assignments": [
                    4614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4614,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "1844:1:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4696,
                      "src": "1836:9:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4613,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1836:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4622,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 4619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1886:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 4617,
                            "name": "cheats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4389,
                            "src": "1874:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cheats_$4839",
                              "typeString": "contract Cheats"
                            }
                          },
                          "id": 4618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4787,
                          "src": "1874:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) external returns (address)"
                          }
                        },
                        "id": 4620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1874:14:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4615,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4373,
                        "src": "1848:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$4361",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNumOfSchedules",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3867,
                      "src": "1848:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1848:41:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1836:53:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4624,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4614,
                        "src": "1913:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4623,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1904:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1904:11:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4626,
                  "nodeType": "EmitStatement",
                  "src": "1899:16:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4628,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4614,
                          "src": "1932:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1936:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1932:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4627,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1925:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1925:13:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4632,
                  "nodeType": "ExpressionStatement",
                  "src": "1925:13:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4636,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1960:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1960:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 4638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1978:7:14",
                          "subdenomination": "weeks",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1814400_by_1",
                            "typeString": "int_const 1814400"
                          },
                          "value": "3"
                        },
                        "src": "1960:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4633,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4389,
                        "src": "1948:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4839",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4792,
                      "src": "1948:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1948:38:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4641,
                  "nodeType": "ExpressionStatement",
                  "src": "1948:38:14"
                },
                {
                  "assignments": [
                    4643
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4643,
                      "mutability": "mutable",
                      "name": "y",
                      "nameLocation": "2004:1:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4696,
                      "src": "1996:9:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4642,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1996:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4650,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4646,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4614,
                          "src": "2039:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 4647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2041:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2039:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4644,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4373,
                        "src": "2008:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$4361",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getScheduleTotalAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3888,
                      "src": "2008:30:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2008:35:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1996:47:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4652,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4643,
                        "src": "2067:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4651,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "2058:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2058:11:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4654,
                  "nodeType": "EmitStatement",
                  "src": "2053:16:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "34",
                                  "id": 4660,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2114:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  }
                                ],
                                "expression": {
                                  "id": 4658,
                                  "name": "cheats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4389,
                                  "src": "2102:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Cheats_$4839",
                                    "typeString": "contract Cheats"
                                  }
                                },
                                "id": 4659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "addr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4787,
                                "src": "2102:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) external returns (address)"
                                }
                              },
                              "id": 4661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2102:14:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 4656,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4376,
                              "src": "2086:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$3534",
                                "typeString": "contract MockERC20"
                              }
                            },
                            "id": 4657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2030,
                            "src": "2086:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 4662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2086:31:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2119:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2086:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4655,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2079:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2079:42:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4666,
                  "nodeType": "ExpressionStatement",
                  "src": "2079:42:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 4672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2156:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 4670,
                            "name": "cheats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4389,
                            "src": "2144:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cheats_$4839",
                              "typeString": "contract Cheats"
                            }
                          },
                          "id": 4671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4787,
                          "src": "2144:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) external returns (address)"
                          }
                        },
                        "id": 4673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2144:14:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4667,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4389,
                        "src": "2131:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4839",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4835,
                      "src": "2131:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2131:28:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4675,
                  "nodeType": "ExpressionStatement",
                  "src": "2131:28:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4679,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4614,
                          "src": "2183:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 4680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2185:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2183:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4676,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4373,
                        "src": "2169:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$4361",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4203,
                      "src": "2169:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2169:18:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4683,
                  "nodeType": "ExpressionStatement",
                  "src": "2169:18:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "34",
                                  "id": 4689,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2232:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  }
                                ],
                                "expression": {
                                  "id": 4687,
                                  "name": "cheats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4389,
                                  "src": "2220:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Cheats_$4839",
                                    "typeString": "contract Cheats"
                                  }
                                },
                                "id": 4688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "addr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4787,
                                "src": "2220:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) external returns (address)"
                                }
                              },
                              "id": 4690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2220:14:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 4685,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4376,
                              "src": "2204:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$3534",
                                "typeString": "contract MockERC20"
                              }
                            },
                            "id": 4686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2030,
                            "src": "2204:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 4691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2204:31:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2236:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2204:33:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4684,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2197:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2197:41:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4695,
                  "nodeType": "ExpressionStatement",
                  "src": "2197:41:14"
                }
              ]
            },
            "functionSelector": "4ef1871f",
            "id": 4697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testVestingClaim",
            "nameLocation": "1650:16:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1666:2:14"
            },
            "returnParameters": {
              "id": 4583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1674:0:14"
            },
            "scope": 4778,
            "src": "1641:605:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4776,
              "nodeType": "Block",
              "src": "2283:459:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "35",
                            "id": 4705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2330:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            }
                          ],
                          "expression": {
                            "id": 4703,
                            "name": "cheats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4389,
                            "src": "2318:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cheats_$4839",
                              "typeString": "contract Cheats"
                            }
                          },
                          "id": 4704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4787,
                          "src": "2318:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) external returns (address)"
                          }
                        },
                        "id": 4706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2318:14:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 4707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2334:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 4700,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "2293:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3625,
                      "src": "2293:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4709,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:46:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "36",
                            "id": 4715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2386:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            }
                          ],
                          "expression": {
                            "id": 4713,
                            "name": "cheats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4389,
                            "src": "2374:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cheats_$4839",
                              "typeString": "contract Cheats"
                            }
                          },
                          "id": 4714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4787,
                          "src": "2374:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) external returns (address)"
                          }
                        },
                        "id": 4716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2374:14:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 4717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2390:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 4710,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "2349:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3625,
                      "src": "2349:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2349:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4719,
                  "nodeType": "ExpressionStatement",
                  "src": "2349:46:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "35",
                            "id": 4725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2430:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            }
                          ],
                          "expression": {
                            "id": 4723,
                            "name": "cheats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4389,
                            "src": "2418:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cheats_$4839",
                              "typeString": "contract Cheats"
                            }
                          },
                          "id": 4724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4787,
                          "src": "2418:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) external returns (address)"
                          }
                        },
                        "id": 4726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2418:14:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4720,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4389,
                        "src": "2405:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4839",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4835,
                      "src": "2405:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2405:28:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4728,
                  "nodeType": "ExpressionStatement",
                  "src": "2405:28:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 4732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2468:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 4729,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "2443:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mockStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3657,
                      "src": "2443:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2443:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4734,
                  "nodeType": "ExpressionStatement",
                  "src": "2443:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "36",
                            "id": 4740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2508:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            }
                          ],
                          "expression": {
                            "id": 4738,
                            "name": "cheats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4389,
                            "src": "2496:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cheats_$4839",
                              "typeString": "contract Cheats"
                            }
                          },
                          "id": 4739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4787,
                          "src": "2496:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) external returns (address)"
                          }
                        },
                        "id": 4741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2496:14:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4735,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4389,
                        "src": "2483:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4839",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4835,
                      "src": "2483:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2483:28:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4743,
                  "nodeType": "ExpressionStatement",
                  "src": "2483:28:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 4747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2546:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 4744,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "2521:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mockStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3657,
                      "src": "2521:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2521:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4749,
                  "nodeType": "ExpressionStatement",
                  "src": "2521:30:14"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4750,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4389,
                        "src": "2561:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$4839",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4838,
                      "src": "2561:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2561:18:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4754,
                  "nodeType": "ExpressionStatement",
                  "src": "2561:18:14"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4755,
                        "name": "StakingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "2589:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockStakingRewards_$3788",
                          "typeString": "contract MockStakingRewards"
                        }
                      },
                      "id": 4757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vestForAllStaked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3781,
                      "src": "2589:31:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2589:33:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4759,
                  "nodeType": "ExpressionStatement",
                  "src": "2589:33:14"
                },
                {
                  "assignments": [
                    4761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4761,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "2640:1:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4776,
                      "src": "2632:9:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4760,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2632:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4769,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "35",
                            "id": 4766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2682:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            }
                          ],
                          "expression": {
                            "id": 4764,
                            "name": "cheats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4389,
                            "src": "2670:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cheats_$4839",
                              "typeString": "contract Cheats"
                            }
                          },
                          "id": 4765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4787,
                          "src": "2670:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) external returns (address)"
                          }
                        },
                        "id": 4767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2670:14:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4762,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4373,
                        "src": "2644:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vesting_$4361",
                          "typeString": "contract Vesting"
                        }
                      },
                      "id": 4763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNumOfSchedules",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3867,
                      "src": "2644:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:41:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2632:53:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4771,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4761,
                          "src": "2702:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2706:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2702:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4770,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2695:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2695:13:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4775,
                  "nodeType": "ExpressionStatement",
                  "src": "2695:13:14"
                }
              ]
            },
            "functionSelector": "b29f36cb",
            "id": 4777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testVestforAll",
            "nameLocation": "2261:14:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2275:2:14"
            },
            "returnParameters": {
              "id": 4699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2283:0:14"
            },
            "scope": 4778,
            "src": "2252:490:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4779,
        "src": "170:2576:14",
        "usedErrors": []
      }
    ],
    "src": "0:2746:14"
  }
}